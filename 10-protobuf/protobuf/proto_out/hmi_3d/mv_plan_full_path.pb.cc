// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_3d/mv_plan_full_path.proto

#include "hmi_3d/mv_plan_full_path.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_ApaPathPoint_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto;
class PB_ApaPathPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_ApaPathPoint> _instance;
} _PB_ApaPathPoint_default_instance_;
class PB_PathPointsInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_PathPointsInfo> _instance;
} _PB_PathPointsInfo_default_instance_;
class PB_PlanFullPathDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_PlanFullPath> _instance;
} _PB_PlanFullPath_default_instance_;
static void InitDefaultsscc_info_PB_ApaPathPoint_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_ApaPathPoint_default_instance_;
    new (ptr) ::PB_ApaPathPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_ApaPathPoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_ApaPathPoint_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PB_ApaPathPoint_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto}, {}};

static void InitDefaultsscc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_PathPointsInfo_default_instance_;
    new (ptr) ::PB_PathPointsInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_PathPointsInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto}, {
      &scc_info_PB_ApaPathPoint_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base,}};

static void InitDefaultsscc_info_PB_PlanFullPath_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_PlanFullPath_default_instance_;
    new (ptr) ::PB_PlanFullPath();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_PlanFullPath::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PB_PlanFullPath_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PB_PlanFullPath_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto}, {
      &scc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_ApaPathPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_ApaPathPoint, fx_),
  PROTOBUF_FIELD_OFFSET(::PB_ApaPathPoint, fy_),
  PROTOBUF_FIELD_OFFSET(::PB_ApaPathPoint, fcurv_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_PathPointsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_PathPointsInfo, validnum_),
  PROTOBUF_FIELD_OFFSET(::PB_PathPointsInfo, apoints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, timemsec_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, apatotalstep_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, apacurstep_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, apapathgear_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, reserved_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, apapathlen_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, aparmpathlen_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, stopdistance_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, validnum_),
  PROTOBUF_FIELD_OFFSET(::PB_PlanFullPath, array_apapathpoints_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PB_ApaPathPoint)},
  { 8, -1, sizeof(::PB_PathPointsInfo)},
  { 15, -1, sizeof(::PB_PlanFullPath)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_ApaPathPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_PathPointsInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_PlanFullPath_default_instance_),
};

const char descriptor_table_protodef_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036hmi_3d/mv_plan_full_path.proto\"8\n\017PB_A"
  "paPathPoint\022\n\n\002fx\030\001 \001(\002\022\n\n\002fY\030\002 \001(\002\022\r\n\005f"
  "Curv\030\003 \001(\002\"H\n\021PB_PathPointsInfo\022\020\n\010valid"
  "Num\030\001 \001(\r\022!\n\007aPoints\030\002 \003(\0132\020.PB_ApaPathP"
  "oint\"\367\001\n\017PB_PlanFullPath\022\020\n\010TimeMsec\030\001 \001"
  "(\004\022\024\n\014APATotalStep\030\002 \001(\r\022\022\n\nAPACurStep\030\003"
  " \001(\r\022\023\n\013APAPathGear\030\004 \001(\r\022\020\n\010reserved\030\005 "
  "\001(\r\022\022\n\nAPAPathLen\030\006 \001(\r\022\024\n\014APARmPathLen\030"
  "\007 \001(\r\022\024\n\014StopDistance\030\010 \001(\r\022\020\n\010validNum\030"
  "\t \001(\r\022/\n\023Array_APAPathPoints\030\n \003(\0132\022.PB_"
  "PathPointsInfob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto_sccs[3] = {
  &scc_info_PB_ApaPathPoint_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base,
  &scc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base,
  &scc_info_PB_PlanFullPath_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto = {
  false, false, descriptor_table_protodef_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto, "hmi_3d/mv_plan_full_path.proto", 422,
  &descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto_once, descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto_sccs, descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto::offsets,
  file_level_metadata_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto, 3, file_level_enum_descriptors_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto, file_level_service_descriptors_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto)), true);

// ===================================================================

void PB_ApaPathPoint::InitAsDefaultInstance() {
}
class PB_ApaPathPoint::_Internal {
 public:
};

PB_ApaPathPoint::PB_ApaPathPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_ApaPathPoint)
}
PB_ApaPathPoint::PB_ApaPathPoint(const PB_ApaPathPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fx_, &from.fx_,
    static_cast<size_t>(reinterpret_cast<char*>(&fcurv_) -
    reinterpret_cast<char*>(&fx_)) + sizeof(fcurv_));
  // @@protoc_insertion_point(copy_constructor:PB_ApaPathPoint)
}

void PB_ApaPathPoint::SharedCtor() {
  ::memset(&fx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fcurv_) -
      reinterpret_cast<char*>(&fx_)) + sizeof(fcurv_));
}

PB_ApaPathPoint::~PB_ApaPathPoint() {
  // @@protoc_insertion_point(destructor:PB_ApaPathPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_ApaPathPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_ApaPathPoint::ArenaDtor(void* object) {
  PB_ApaPathPoint* _this = reinterpret_cast< PB_ApaPathPoint* >(object);
  (void)_this;
}
void PB_ApaPathPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ApaPathPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_ApaPathPoint& PB_ApaPathPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_ApaPathPoint_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base);
  return *internal_default_instance();
}


void PB_ApaPathPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_ApaPathPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fcurv_) -
      reinterpret_cast<char*>(&fx_)) + sizeof(fcurv_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ApaPathPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float fx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          fx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float fY = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          fy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float fCurv = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          fcurv_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_ApaPathPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_ApaPathPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float fx = 1;
  if (!(this->fx() <= 0 && this->fx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_fx(), target);
  }

  // float fY = 2;
  if (!(this->fy() <= 0 && this->fy() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_fy(), target);
  }

  // float fCurv = 3;
  if (!(this->fcurv() <= 0 && this->fcurv() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_fcurv(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_ApaPathPoint)
  return target;
}

size_t PB_ApaPathPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_ApaPathPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float fx = 1;
  if (!(this->fx() <= 0 && this->fx() >= 0)) {
    total_size += 1 + 4;
  }

  // float fY = 2;
  if (!(this->fy() <= 0 && this->fy() >= 0)) {
    total_size += 1 + 4;
  }

  // float fCurv = 3;
  if (!(this->fcurv() <= 0 && this->fcurv() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_ApaPathPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_ApaPathPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_ApaPathPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_ApaPathPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_ApaPathPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_ApaPathPoint)
    MergeFrom(*source);
  }
}

void PB_ApaPathPoint::MergeFrom(const PB_ApaPathPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_ApaPathPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.fx() <= 0 && from.fx() >= 0)) {
    _internal_set_fx(from._internal_fx());
  }
  if (!(from.fy() <= 0 && from.fy() >= 0)) {
    _internal_set_fy(from._internal_fy());
  }
  if (!(from.fcurv() <= 0 && from.fcurv() >= 0)) {
    _internal_set_fcurv(from._internal_fcurv());
  }
}

void PB_ApaPathPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_ApaPathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ApaPathPoint::CopyFrom(const PB_ApaPathPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_ApaPathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ApaPathPoint::IsInitialized() const {
  return true;
}

void PB_ApaPathPoint::InternalSwap(PB_ApaPathPoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ApaPathPoint, fcurv_)
      + sizeof(PB_ApaPathPoint::fcurv_)
      - PROTOBUF_FIELD_OFFSET(PB_ApaPathPoint, fx_)>(
          reinterpret_cast<char*>(&fx_),
          reinterpret_cast<char*>(&other->fx_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ApaPathPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PB_PathPointsInfo::InitAsDefaultInstance() {
}
class PB_PathPointsInfo::_Internal {
 public:
};

PB_PathPointsInfo::PB_PathPointsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  apoints_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_PathPointsInfo)
}
PB_PathPointsInfo::PB_PathPointsInfo(const PB_PathPointsInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      apoints_(from.apoints_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  validnum_ = from.validnum_;
  // @@protoc_insertion_point(copy_constructor:PB_PathPointsInfo)
}

void PB_PathPointsInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base);
  validnum_ = 0u;
}

PB_PathPointsInfo::~PB_PathPointsInfo() {
  // @@protoc_insertion_point(destructor:PB_PathPointsInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_PathPointsInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_PathPointsInfo::ArenaDtor(void* object) {
  PB_PathPointsInfo* _this = reinterpret_cast< PB_PathPointsInfo* >(object);
  (void)_this;
}
void PB_PathPointsInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_PathPointsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_PathPointsInfo& PB_PathPointsInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_PathPointsInfo_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base);
  return *internal_default_instance();
}


void PB_PathPointsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PathPointsInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apoints_.Clear();
  validnum_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_PathPointsInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 validNum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          validnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .PB_ApaPathPoint aPoints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_PathPointsInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PathPointsInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 validNum = 1;
  if (this->validnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_validnum(), target);
  }

  // repeated .PB_ApaPathPoint aPoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apoints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_apoints(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_PathPointsInfo)
  return target;
}

size_t PB_PathPointsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PathPointsInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PB_ApaPathPoint aPoints = 2;
  total_size += 1UL * this->_internal_apoints_size();
  for (const auto& msg : this->apoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 validNum = 1;
  if (this->validnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_validnum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_PathPointsInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PathPointsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_PathPointsInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_PathPointsInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PathPointsInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PathPointsInfo)
    MergeFrom(*source);
  }
}

void PB_PathPointsInfo::MergeFrom(const PB_PathPointsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PathPointsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apoints_.MergeFrom(from.apoints_);
  if (from.validnum() != 0) {
    _internal_set_validnum(from._internal_validnum());
  }
}

void PB_PathPointsInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PathPointsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PathPointsInfo::CopyFrom(const PB_PathPointsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PathPointsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PathPointsInfo::IsInitialized() const {
  return true;
}

void PB_PathPointsInfo::InternalSwap(PB_PathPointsInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  apoints_.InternalSwap(&other->apoints_);
  swap(validnum_, other->validnum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_PathPointsInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PB_PlanFullPath::InitAsDefaultInstance() {
}
class PB_PlanFullPath::_Internal {
 public:
};

PB_PlanFullPath::PB_PlanFullPath(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  array_apapathpoints_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_PlanFullPath)
}
PB_PlanFullPath::PB_PlanFullPath(const PB_PlanFullPath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      array_apapathpoints_(from.array_apapathpoints_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&timemsec_, &from.timemsec_,
    static_cast<size_t>(reinterpret_cast<char*>(&validnum_) -
    reinterpret_cast<char*>(&timemsec_)) + sizeof(validnum_));
  // @@protoc_insertion_point(copy_constructor:PB_PlanFullPath)
}

void PB_PlanFullPath::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PB_PlanFullPath_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base);
  ::memset(&timemsec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validnum_) -
      reinterpret_cast<char*>(&timemsec_)) + sizeof(validnum_));
}

PB_PlanFullPath::~PB_PlanFullPath() {
  // @@protoc_insertion_point(destructor:PB_PlanFullPath)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_PlanFullPath::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_PlanFullPath::ArenaDtor(void* object) {
  PB_PlanFullPath* _this = reinterpret_cast< PB_PlanFullPath* >(object);
  (void)_this;
}
void PB_PlanFullPath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_PlanFullPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_PlanFullPath& PB_PlanFullPath::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_PlanFullPath_hmi_5f3d_2fmv_5fplan_5ffull_5fpath_2eproto.base);
  return *internal_default_instance();
}


void PB_PlanFullPath::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_PlanFullPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_apapathpoints_.Clear();
  ::memset(&timemsec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validnum_) -
      reinterpret_cast<char*>(&timemsec_)) + sizeof(validnum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_PlanFullPath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 TimeMsec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timemsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 APATotalStep = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          apatotalstep_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 APACurStep = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          apacurstep_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 APAPathGear = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          apapathgear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 reserved = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          reserved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 APAPathLen = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          apapathlen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 APARmPathLen = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          aparmpathlen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 StopDistance = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          stopdistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 validNum = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          validnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .PB_PathPointsInfo Array_APAPathPoints = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_array_apapathpoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_PlanFullPath::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PlanFullPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 TimeMsec = 1;
  if (this->timemsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timemsec(), target);
  }

  // uint32 APATotalStep = 2;
  if (this->apatotalstep() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_apatotalstep(), target);
  }

  // uint32 APACurStep = 3;
  if (this->apacurstep() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_apacurstep(), target);
  }

  // uint32 APAPathGear = 4;
  if (this->apapathgear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_apapathgear(), target);
  }

  // uint32 reserved = 5;
  if (this->reserved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_reserved(), target);
  }

  // uint32 APAPathLen = 6;
  if (this->apapathlen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_apapathlen(), target);
  }

  // uint32 APARmPathLen = 7;
  if (this->aparmpathlen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_aparmpathlen(), target);
  }

  // uint32 StopDistance = 8;
  if (this->stopdistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_stopdistance(), target);
  }

  // uint32 validNum = 9;
  if (this->validnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_validnum(), target);
  }

  // repeated .PB_PathPointsInfo Array_APAPathPoints = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_array_apapathpoints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_array_apapathpoints(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_PlanFullPath)
  return target;
}

size_t PB_PlanFullPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_PlanFullPath)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PB_PathPointsInfo Array_APAPathPoints = 10;
  total_size += 1UL * this->_internal_array_apapathpoints_size();
  for (const auto& msg : this->array_apapathpoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 TimeMsec = 1;
  if (this->timemsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timemsec());
  }

  // uint32 APATotalStep = 2;
  if (this->apatotalstep() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apatotalstep());
  }

  // uint32 APACurStep = 3;
  if (this->apacurstep() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apacurstep());
  }

  // uint32 APAPathGear = 4;
  if (this->apapathgear() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apapathgear());
  }

  // uint32 reserved = 5;
  if (this->reserved() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved());
  }

  // uint32 APAPathLen = 6;
  if (this->apapathlen() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apapathlen());
  }

  // uint32 APARmPathLen = 7;
  if (this->aparmpathlen() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_aparmpathlen());
  }

  // uint32 StopDistance = 8;
  if (this->stopdistance() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stopdistance());
  }

  // uint32 validNum = 9;
  if (this->validnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_validnum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_PlanFullPath::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_PlanFullPath)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_PlanFullPath* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_PlanFullPath>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_PlanFullPath)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_PlanFullPath)
    MergeFrom(*source);
  }
}

void PB_PlanFullPath::MergeFrom(const PB_PlanFullPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_PlanFullPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_apapathpoints_.MergeFrom(from.array_apapathpoints_);
  if (from.timemsec() != 0) {
    _internal_set_timemsec(from._internal_timemsec());
  }
  if (from.apatotalstep() != 0) {
    _internal_set_apatotalstep(from._internal_apatotalstep());
  }
  if (from.apacurstep() != 0) {
    _internal_set_apacurstep(from._internal_apacurstep());
  }
  if (from.apapathgear() != 0) {
    _internal_set_apapathgear(from._internal_apapathgear());
  }
  if (from.reserved() != 0) {
    _internal_set_reserved(from._internal_reserved());
  }
  if (from.apapathlen() != 0) {
    _internal_set_apapathlen(from._internal_apapathlen());
  }
  if (from.aparmpathlen() != 0) {
    _internal_set_aparmpathlen(from._internal_aparmpathlen());
  }
  if (from.stopdistance() != 0) {
    _internal_set_stopdistance(from._internal_stopdistance());
  }
  if (from.validnum() != 0) {
    _internal_set_validnum(from._internal_validnum());
  }
}

void PB_PlanFullPath::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_PlanFullPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PlanFullPath::CopyFrom(const PB_PlanFullPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_PlanFullPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PlanFullPath::IsInitialized() const {
  return true;
}

void PB_PlanFullPath::InternalSwap(PB_PlanFullPath* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  array_apapathpoints_.InternalSwap(&other->array_apapathpoints_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_PlanFullPath, validnum_)
      + sizeof(PB_PlanFullPath::validnum_)
      - PROTOBUF_FIELD_OFFSET(PB_PlanFullPath, timemsec_)>(
          reinterpret_cast<char*>(&timemsec_),
          reinterpret_cast<char*>(&other->timemsec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_PlanFullPath::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PB_ApaPathPoint* Arena::CreateMaybeMessage< ::PB_ApaPathPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_ApaPathPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::PB_PathPointsInfo* Arena::CreateMaybeMessage< ::PB_PathPointsInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_PathPointsInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PB_PlanFullPath* Arena::CreateMaybeMessage< ::PB_PlanFullPath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_PlanFullPath >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
