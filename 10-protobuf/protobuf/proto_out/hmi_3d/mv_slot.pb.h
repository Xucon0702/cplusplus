// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_3d/mv_slot.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_2fmv_5fslot_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_2fmv_5fslot_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_2fmv_5fslot_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hmi_5f3d_2fmv_5fslot_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5f3d_2fmv_5fslot_2eproto;
class PB_PrkgSlot;
class PB_PrkgSlotDefaultTypeInternal;
extern PB_PrkgSlotDefaultTypeInternal _PB_PrkgSlot_default_instance_;
class PB_SlotInfo;
class PB_SlotInfoDefaultTypeInternal;
extern PB_SlotInfoDefaultTypeInternal _PB_SlotInfo_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PB_PrkgSlot* Arena::CreateMaybeMessage<::PB_PrkgSlot>(Arena*);
template<> ::PB_SlotInfo* Arena::CreateMaybeMessage<::PB_SlotInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class PB_PrkgSlot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PB_PrkgSlot) */ {
 public:
  inline PB_PrkgSlot() : PB_PrkgSlot(nullptr) {};
  virtual ~PB_PrkgSlot();

  PB_PrkgSlot(const PB_PrkgSlot& from);
  PB_PrkgSlot(PB_PrkgSlot&& from) noexcept
    : PB_PrkgSlot() {
    *this = ::std::move(from);
  }

  inline PB_PrkgSlot& operator=(const PB_PrkgSlot& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_PrkgSlot& operator=(PB_PrkgSlot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PB_PrkgSlot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_PrkgSlot* internal_default_instance() {
    return reinterpret_cast<const PB_PrkgSlot*>(
               &_PB_PrkgSlot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PB_PrkgSlot& a, PB_PrkgSlot& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_PrkgSlot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_PrkgSlot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PB_PrkgSlot* New() const final {
    return CreateMaybeMessage<PB_PrkgSlot>(nullptr);
  }

  PB_PrkgSlot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PB_PrkgSlot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PB_PrkgSlot& from);
  void MergeFrom(const PB_PrkgSlot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_PrkgSlot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PB_PrkgSlot";
  }
  protected:
  explicit PB_PrkgSlot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5f3d_2fmv_5fslot_2eproto);
    return ::descriptor_table_hmi_5f3d_2fmv_5fslot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAPAPrkgSlotStsFieldNumber = 1,
    kAPASlotACoorXFieldNumber = 2,
    kAPASlotACoorYFieldNumber = 3,
    kAPASlotBCoorXFieldNumber = 4,
    kAPASlotBCoorYFieldNumber = 5,
    kAPASlotCCoorXFieldNumber = 6,
    kAPASlotCCoorYFieldNumber = 7,
    kAPASlotDCoorXFieldNumber = 8,
    kAPASlotDCoorYFieldNumber = 9,
    kBiasValidDirectionFieldNumber = 10,
    kAPAPrkgSlotLimitStsFieldNumber = 11,
  };
  // uint32 APA_PrkgSlot_Sts = 1;
  void clear_apa_prkgslot_sts();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_prkgslot_sts() const;
  void set_apa_prkgslot_sts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_prkgslot_sts() const;
  void _internal_set_apa_prkgslot_sts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float APA_SlotACoorX = 2;
  void clear_apa_slotacoorx();
  float apa_slotacoorx() const;
  void set_apa_slotacoorx(float value);
  private:
  float _internal_apa_slotacoorx() const;
  void _internal_set_apa_slotacoorx(float value);
  public:

  // float APA_SlotACoorY = 3;
  void clear_apa_slotacoory();
  float apa_slotacoory() const;
  void set_apa_slotacoory(float value);
  private:
  float _internal_apa_slotacoory() const;
  void _internal_set_apa_slotacoory(float value);
  public:

  // float APA_SlotBCoorX = 4;
  void clear_apa_slotbcoorx();
  float apa_slotbcoorx() const;
  void set_apa_slotbcoorx(float value);
  private:
  float _internal_apa_slotbcoorx() const;
  void _internal_set_apa_slotbcoorx(float value);
  public:

  // float APA_SlotBCoorY = 5;
  void clear_apa_slotbcoory();
  float apa_slotbcoory() const;
  void set_apa_slotbcoory(float value);
  private:
  float _internal_apa_slotbcoory() const;
  void _internal_set_apa_slotbcoory(float value);
  public:

  // float APA_SlotCCoorX = 6;
  void clear_apa_slotccoorx();
  float apa_slotccoorx() const;
  void set_apa_slotccoorx(float value);
  private:
  float _internal_apa_slotccoorx() const;
  void _internal_set_apa_slotccoorx(float value);
  public:

  // float APA_SlotCCoorY = 7;
  void clear_apa_slotccoory();
  float apa_slotccoory() const;
  void set_apa_slotccoory(float value);
  private:
  float _internal_apa_slotccoory() const;
  void _internal_set_apa_slotccoory(float value);
  public:

  // float APA_SlotDCoorX = 8;
  void clear_apa_slotdcoorx();
  float apa_slotdcoorx() const;
  void set_apa_slotdcoorx(float value);
  private:
  float _internal_apa_slotdcoorx() const;
  void _internal_set_apa_slotdcoorx(float value);
  public:

  // float APA_SlotDCoorY = 9;
  void clear_apa_slotdcoory();
  float apa_slotdcoory() const;
  void set_apa_slotdcoory(float value);
  private:
  float _internal_apa_slotdcoory() const;
  void _internal_set_apa_slotdcoory(float value);
  public:

  // uint32 bias_valid_direction = 10;
  void clear_bias_valid_direction();
  ::PROTOBUF_NAMESPACE_ID::uint32 bias_valid_direction() const;
  void set_bias_valid_direction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bias_valid_direction() const;
  void _internal_set_bias_valid_direction(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 APA_PrkgSlotLimit_Sts = 11;
  void clear_apa_prkgslotlimit_sts();
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_prkgslotlimit_sts() const;
  void set_apa_prkgslotlimit_sts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apa_prkgslotlimit_sts() const;
  void _internal_set_apa_prkgslotlimit_sts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:PB_PrkgSlot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_prkgslot_sts_;
  float apa_slotacoorx_;
  float apa_slotacoory_;
  float apa_slotbcoorx_;
  float apa_slotbcoory_;
  float apa_slotccoorx_;
  float apa_slotccoory_;
  float apa_slotdcoorx_;
  float apa_slotdcoory_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bias_valid_direction_;
  ::PROTOBUF_NAMESPACE_ID::uint32 apa_prkgslotlimit_sts_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5f3d_2fmv_5fslot_2eproto;
};
// -------------------------------------------------------------------

class PB_SlotInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PB_SlotInfo) */ {
 public:
  inline PB_SlotInfo() : PB_SlotInfo(nullptr) {};
  virtual ~PB_SlotInfo();

  PB_SlotInfo(const PB_SlotInfo& from);
  PB_SlotInfo(PB_SlotInfo&& from) noexcept
    : PB_SlotInfo() {
    *this = ::std::move(from);
  }

  inline PB_SlotInfo& operator=(const PB_SlotInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_SlotInfo& operator=(PB_SlotInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PB_SlotInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_SlotInfo* internal_default_instance() {
    return reinterpret_cast<const PB_SlotInfo*>(
               &_PB_SlotInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PB_SlotInfo& a, PB_SlotInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_SlotInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_SlotInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PB_SlotInfo* New() const final {
    return CreateMaybeMessage<PB_SlotInfo>(nullptr);
  }

  PB_SlotInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PB_SlotInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PB_SlotInfo& from);
  void MergeFrom(const PB_SlotInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_SlotInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PB_SlotInfo";
  }
  protected:
  explicit PB_SlotInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5f3d_2fmv_5fslot_2eproto);
    return ::descriptor_table_hmi_5f3d_2fmv_5fslot_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrkgSlotFieldNumber = 2,
    kTimeMsecFieldNumber = 1,
  };
  // repeated .PB_PrkgSlot PrkgSlot = 2;
  int prkgslot_size() const;
  private:
  int _internal_prkgslot_size() const;
  public:
  void clear_prkgslot();
  ::PB_PrkgSlot* mutable_prkgslot(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PB_PrkgSlot >*
      mutable_prkgslot();
  private:
  const ::PB_PrkgSlot& _internal_prkgslot(int index) const;
  ::PB_PrkgSlot* _internal_add_prkgslot();
  public:
  const ::PB_PrkgSlot& prkgslot(int index) const;
  ::PB_PrkgSlot* add_prkgslot();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PB_PrkgSlot >&
      prkgslot() const;

  // uint64 TimeMsec = 1;
  void clear_timemsec();
  ::PROTOBUF_NAMESPACE_ID::uint64 timemsec() const;
  void set_timemsec(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timemsec() const;
  void _internal_set_timemsec(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:PB_SlotInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PB_PrkgSlot > prkgslot_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timemsec_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5f3d_2fmv_5fslot_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_PrkgSlot

// uint32 APA_PrkgSlot_Sts = 1;
inline void PB_PrkgSlot::clear_apa_prkgslot_sts() {
  apa_prkgslot_sts_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_PrkgSlot::_internal_apa_prkgslot_sts() const {
  return apa_prkgslot_sts_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_PrkgSlot::apa_prkgslot_sts() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_PrkgSlot_Sts)
  return _internal_apa_prkgslot_sts();
}
inline void PB_PrkgSlot::_internal_set_apa_prkgslot_sts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_prkgslot_sts_ = value;
}
inline void PB_PrkgSlot::set_apa_prkgslot_sts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_prkgslot_sts(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_PrkgSlot_Sts)
}

// float APA_SlotACoorX = 2;
inline void PB_PrkgSlot::clear_apa_slotacoorx() {
  apa_slotacoorx_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotacoorx() const {
  return apa_slotacoorx_;
}
inline float PB_PrkgSlot::apa_slotacoorx() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotACoorX)
  return _internal_apa_slotacoorx();
}
inline void PB_PrkgSlot::_internal_set_apa_slotacoorx(float value) {
  
  apa_slotacoorx_ = value;
}
inline void PB_PrkgSlot::set_apa_slotacoorx(float value) {
  _internal_set_apa_slotacoorx(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotACoorX)
}

// float APA_SlotACoorY = 3;
inline void PB_PrkgSlot::clear_apa_slotacoory() {
  apa_slotacoory_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotacoory() const {
  return apa_slotacoory_;
}
inline float PB_PrkgSlot::apa_slotacoory() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotACoorY)
  return _internal_apa_slotacoory();
}
inline void PB_PrkgSlot::_internal_set_apa_slotacoory(float value) {
  
  apa_slotacoory_ = value;
}
inline void PB_PrkgSlot::set_apa_slotacoory(float value) {
  _internal_set_apa_slotacoory(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotACoorY)
}

// float APA_SlotBCoorX = 4;
inline void PB_PrkgSlot::clear_apa_slotbcoorx() {
  apa_slotbcoorx_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotbcoorx() const {
  return apa_slotbcoorx_;
}
inline float PB_PrkgSlot::apa_slotbcoorx() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotBCoorX)
  return _internal_apa_slotbcoorx();
}
inline void PB_PrkgSlot::_internal_set_apa_slotbcoorx(float value) {
  
  apa_slotbcoorx_ = value;
}
inline void PB_PrkgSlot::set_apa_slotbcoorx(float value) {
  _internal_set_apa_slotbcoorx(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotBCoorX)
}

// float APA_SlotBCoorY = 5;
inline void PB_PrkgSlot::clear_apa_slotbcoory() {
  apa_slotbcoory_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotbcoory() const {
  return apa_slotbcoory_;
}
inline float PB_PrkgSlot::apa_slotbcoory() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotBCoorY)
  return _internal_apa_slotbcoory();
}
inline void PB_PrkgSlot::_internal_set_apa_slotbcoory(float value) {
  
  apa_slotbcoory_ = value;
}
inline void PB_PrkgSlot::set_apa_slotbcoory(float value) {
  _internal_set_apa_slotbcoory(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotBCoorY)
}

// float APA_SlotCCoorX = 6;
inline void PB_PrkgSlot::clear_apa_slotccoorx() {
  apa_slotccoorx_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotccoorx() const {
  return apa_slotccoorx_;
}
inline float PB_PrkgSlot::apa_slotccoorx() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotCCoorX)
  return _internal_apa_slotccoorx();
}
inline void PB_PrkgSlot::_internal_set_apa_slotccoorx(float value) {
  
  apa_slotccoorx_ = value;
}
inline void PB_PrkgSlot::set_apa_slotccoorx(float value) {
  _internal_set_apa_slotccoorx(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotCCoorX)
}

// float APA_SlotCCoorY = 7;
inline void PB_PrkgSlot::clear_apa_slotccoory() {
  apa_slotccoory_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotccoory() const {
  return apa_slotccoory_;
}
inline float PB_PrkgSlot::apa_slotccoory() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotCCoorY)
  return _internal_apa_slotccoory();
}
inline void PB_PrkgSlot::_internal_set_apa_slotccoory(float value) {
  
  apa_slotccoory_ = value;
}
inline void PB_PrkgSlot::set_apa_slotccoory(float value) {
  _internal_set_apa_slotccoory(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotCCoorY)
}

// float APA_SlotDCoorX = 8;
inline void PB_PrkgSlot::clear_apa_slotdcoorx() {
  apa_slotdcoorx_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotdcoorx() const {
  return apa_slotdcoorx_;
}
inline float PB_PrkgSlot::apa_slotdcoorx() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotDCoorX)
  return _internal_apa_slotdcoorx();
}
inline void PB_PrkgSlot::_internal_set_apa_slotdcoorx(float value) {
  
  apa_slotdcoorx_ = value;
}
inline void PB_PrkgSlot::set_apa_slotdcoorx(float value) {
  _internal_set_apa_slotdcoorx(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotDCoorX)
}

// float APA_SlotDCoorY = 9;
inline void PB_PrkgSlot::clear_apa_slotdcoory() {
  apa_slotdcoory_ = 0;
}
inline float PB_PrkgSlot::_internal_apa_slotdcoory() const {
  return apa_slotdcoory_;
}
inline float PB_PrkgSlot::apa_slotdcoory() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_SlotDCoorY)
  return _internal_apa_slotdcoory();
}
inline void PB_PrkgSlot::_internal_set_apa_slotdcoory(float value) {
  
  apa_slotdcoory_ = value;
}
inline void PB_PrkgSlot::set_apa_slotdcoory(float value) {
  _internal_set_apa_slotdcoory(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_SlotDCoorY)
}

// uint32 bias_valid_direction = 10;
inline void PB_PrkgSlot::clear_bias_valid_direction() {
  bias_valid_direction_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_PrkgSlot::_internal_bias_valid_direction() const {
  return bias_valid_direction_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_PrkgSlot::bias_valid_direction() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.bias_valid_direction)
  return _internal_bias_valid_direction();
}
inline void PB_PrkgSlot::_internal_set_bias_valid_direction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bias_valid_direction_ = value;
}
inline void PB_PrkgSlot::set_bias_valid_direction(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bias_valid_direction(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.bias_valid_direction)
}

// uint32 APA_PrkgSlotLimit_Sts = 11;
inline void PB_PrkgSlot::clear_apa_prkgslotlimit_sts() {
  apa_prkgslotlimit_sts_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_PrkgSlot::_internal_apa_prkgslotlimit_sts() const {
  return apa_prkgslotlimit_sts_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_PrkgSlot::apa_prkgslotlimit_sts() const {
  // @@protoc_insertion_point(field_get:PB_PrkgSlot.APA_PrkgSlotLimit_Sts)
  return _internal_apa_prkgslotlimit_sts();
}
inline void PB_PrkgSlot::_internal_set_apa_prkgslotlimit_sts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  apa_prkgslotlimit_sts_ = value;
}
inline void PB_PrkgSlot::set_apa_prkgslotlimit_sts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_apa_prkgslotlimit_sts(value);
  // @@protoc_insertion_point(field_set:PB_PrkgSlot.APA_PrkgSlotLimit_Sts)
}

// -------------------------------------------------------------------

// PB_SlotInfo

// uint64 TimeMsec = 1;
inline void PB_SlotInfo::clear_timemsec() {
  timemsec_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PB_SlotInfo::_internal_timemsec() const {
  return timemsec_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PB_SlotInfo::timemsec() const {
  // @@protoc_insertion_point(field_get:PB_SlotInfo.TimeMsec)
  return _internal_timemsec();
}
inline void PB_SlotInfo::_internal_set_timemsec(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  timemsec_ = value;
}
inline void PB_SlotInfo::set_timemsec(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timemsec(value);
  // @@protoc_insertion_point(field_set:PB_SlotInfo.TimeMsec)
}

// repeated .PB_PrkgSlot PrkgSlot = 2;
inline int PB_SlotInfo::_internal_prkgslot_size() const {
  return prkgslot_.size();
}
inline int PB_SlotInfo::prkgslot_size() const {
  return _internal_prkgslot_size();
}
inline void PB_SlotInfo::clear_prkgslot() {
  prkgslot_.Clear();
}
inline ::PB_PrkgSlot* PB_SlotInfo::mutable_prkgslot(int index) {
  // @@protoc_insertion_point(field_mutable:PB_SlotInfo.PrkgSlot)
  return prkgslot_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PB_PrkgSlot >*
PB_SlotInfo::mutable_prkgslot() {
  // @@protoc_insertion_point(field_mutable_list:PB_SlotInfo.PrkgSlot)
  return &prkgslot_;
}
inline const ::PB_PrkgSlot& PB_SlotInfo::_internal_prkgslot(int index) const {
  return prkgslot_.Get(index);
}
inline const ::PB_PrkgSlot& PB_SlotInfo::prkgslot(int index) const {
  // @@protoc_insertion_point(field_get:PB_SlotInfo.PrkgSlot)
  return _internal_prkgslot(index);
}
inline ::PB_PrkgSlot* PB_SlotInfo::_internal_add_prkgslot() {
  return prkgslot_.Add();
}
inline ::PB_PrkgSlot* PB_SlotInfo::add_prkgslot() {
  // @@protoc_insertion_point(field_add:PB_SlotInfo.PrkgSlot)
  return _internal_add_prkgslot();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PB_PrkgSlot >&
PB_SlotInfo::prkgslot() const {
  // @@protoc_insertion_point(field_list:PB_SlotInfo.PrkgSlot)
  return prkgslot_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_2fmv_5fslot_2eproto
