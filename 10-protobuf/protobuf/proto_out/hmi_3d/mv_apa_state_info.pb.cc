// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_3d/mv_apa_state_info.proto

#include "hmi_3d/mv_apa_state_info.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class PB_ApaStateInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_ApaStateInfo> _instance;
} _PB_ApaStateInfo_default_instance_;
static void InitDefaultsscc_info_PB_ApaStateInfo_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_ApaStateInfo_default_instance_;
    new (ptr) ::PB_ApaStateInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_ApaStateInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_ApaStateInfo_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PB_ApaStateInfo_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_ApaStateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_ApaStateInfo, ltimestampms_),
  PROTOBUF_FIELD_OFFSET(::PB_ApaStateInfo, avap_apafundispsts_),
  PROTOBUF_FIELD_OFFSET(::PB_ApaStateInfo, avap_infomsgs_),
  PROTOBUF_FIELD_OFFSET(::PB_ApaStateInfo, avap_prkgpausemsgs_),
  PROTOBUF_FIELD_OFFSET(::PB_ApaStateInfo, apa_cnclmsgs_),
  PROTOBUF_FIELD_OFFSET(::PB_ApaStateInfo, apa_fctunavlmsgs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PB_ApaStateInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_ApaStateInfo_default_instance_),
};

const char descriptor_table_protodef_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036hmi_3d/mv_apa_state_info.proto\"\246\001\n\017PB_"
  "ApaStateInfo\022\024\n\014lTimestampMs\030\001 \001(\004\022\032\n\022AV"
  "AP_APAFunDispSts\030\002 \001(\r\022\025\n\rAVAP_InfoMsgs\030"
  "\003 \001(\r\022\032\n\022AVAP_PrkgPauseMsgs\030\004 \001(\r\022\024\n\014APA"
  "_CnclMsgs\030\005 \001(\r\022\030\n\020APA_FctUnavlMsgs\030\006 \001("
  "\rb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto_sccs[1] = {
  &scc_info_PB_ApaStateInfo_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto = {
  false, false, descriptor_table_protodef_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto, "hmi_3d/mv_apa_state_info.proto", 209,
  &descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto_once, descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto_sccs, descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto::offsets,
  file_level_metadata_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto, 1, file_level_enum_descriptors_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto, file_level_service_descriptors_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto)), true);

// ===================================================================

void PB_ApaStateInfo::InitAsDefaultInstance() {
}
class PB_ApaStateInfo::_Internal {
 public:
};

PB_ApaStateInfo::PB_ApaStateInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_ApaStateInfo)
}
PB_ApaStateInfo::PB_ApaStateInfo(const PB_ApaStateInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ltimestampms_, &from.ltimestampms_,
    static_cast<size_t>(reinterpret_cast<char*>(&apa_fctunavlmsgs_) -
    reinterpret_cast<char*>(&ltimestampms_)) + sizeof(apa_fctunavlmsgs_));
  // @@protoc_insertion_point(copy_constructor:PB_ApaStateInfo)
}

void PB_ApaStateInfo::SharedCtor() {
  ::memset(&ltimestampms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apa_fctunavlmsgs_) -
      reinterpret_cast<char*>(&ltimestampms_)) + sizeof(apa_fctunavlmsgs_));
}

PB_ApaStateInfo::~PB_ApaStateInfo() {
  // @@protoc_insertion_point(destructor:PB_ApaStateInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_ApaStateInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_ApaStateInfo::ArenaDtor(void* object) {
  PB_ApaStateInfo* _this = reinterpret_cast< PB_ApaStateInfo* >(object);
  (void)_this;
}
void PB_ApaStateInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ApaStateInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_ApaStateInfo& PB_ApaStateInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_ApaStateInfo_hmi_5f3d_2fmv_5fapa_5fstate_5finfo_2eproto.base);
  return *internal_default_instance();
}


void PB_ApaStateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_ApaStateInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ltimestampms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apa_fctunavlmsgs_) -
      reinterpret_cast<char*>(&ltimestampms_)) + sizeof(apa_fctunavlmsgs_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ApaStateInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 lTimestampMs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ltimestampms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 AVAP_APAFunDispSts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          avap_apafundispsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 AVAP_InfoMsgs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          avap_infomsgs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 AVAP_PrkgPauseMsgs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          avap_prkgpausemsgs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 APA_CnclMsgs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          apa_cnclmsgs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 APA_FctUnavlMsgs = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          apa_fctunavlmsgs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_ApaStateInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_ApaStateInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lTimestampMs = 1;
  if (this->ltimestampms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_ltimestampms(), target);
  }

  // uint32 AVAP_APAFunDispSts = 2;
  if (this->avap_apafundispsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_avap_apafundispsts(), target);
  }

  // uint32 AVAP_InfoMsgs = 3;
  if (this->avap_infomsgs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_avap_infomsgs(), target);
  }

  // uint32 AVAP_PrkgPauseMsgs = 4;
  if (this->avap_prkgpausemsgs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_avap_prkgpausemsgs(), target);
  }

  // uint32 APA_CnclMsgs = 5;
  if (this->apa_cnclmsgs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_apa_cnclmsgs(), target);
  }

  // uint32 APA_FctUnavlMsgs = 6;
  if (this->apa_fctunavlmsgs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_apa_fctunavlmsgs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_ApaStateInfo)
  return target;
}

size_t PB_ApaStateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_ApaStateInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 lTimestampMs = 1;
  if (this->ltimestampms() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_ltimestampms());
  }

  // uint32 AVAP_APAFunDispSts = 2;
  if (this->avap_apafundispsts() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avap_apafundispsts());
  }

  // uint32 AVAP_InfoMsgs = 3;
  if (this->avap_infomsgs() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avap_infomsgs());
  }

  // uint32 AVAP_PrkgPauseMsgs = 4;
  if (this->avap_prkgpausemsgs() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avap_prkgpausemsgs());
  }

  // uint32 APA_CnclMsgs = 5;
  if (this->apa_cnclmsgs() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_cnclmsgs());
  }

  // uint32 APA_FctUnavlMsgs = 6;
  if (this->apa_fctunavlmsgs() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_fctunavlmsgs());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_ApaStateInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_ApaStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_ApaStateInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_ApaStateInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_ApaStateInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_ApaStateInfo)
    MergeFrom(*source);
  }
}

void PB_ApaStateInfo::MergeFrom(const PB_ApaStateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_ApaStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ltimestampms() != 0) {
    _internal_set_ltimestampms(from._internal_ltimestampms());
  }
  if (from.avap_apafundispsts() != 0) {
    _internal_set_avap_apafundispsts(from._internal_avap_apafundispsts());
  }
  if (from.avap_infomsgs() != 0) {
    _internal_set_avap_infomsgs(from._internal_avap_infomsgs());
  }
  if (from.avap_prkgpausemsgs() != 0) {
    _internal_set_avap_prkgpausemsgs(from._internal_avap_prkgpausemsgs());
  }
  if (from.apa_cnclmsgs() != 0) {
    _internal_set_apa_cnclmsgs(from._internal_apa_cnclmsgs());
  }
  if (from.apa_fctunavlmsgs() != 0) {
    _internal_set_apa_fctunavlmsgs(from._internal_apa_fctunavlmsgs());
  }
}

void PB_ApaStateInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_ApaStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_ApaStateInfo::CopyFrom(const PB_ApaStateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_ApaStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ApaStateInfo::IsInitialized() const {
  return true;
}

void PB_ApaStateInfo::InternalSwap(PB_ApaStateInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ApaStateInfo, apa_fctunavlmsgs_)
      + sizeof(PB_ApaStateInfo::apa_fctunavlmsgs_)
      - PROTOBUF_FIELD_OFFSET(PB_ApaStateInfo, ltimestampms_)>(
          reinterpret_cast<char*>(&ltimestampms_),
          reinterpret_cast<char*>(&other->ltimestampms_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ApaStateInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PB_ApaStateInfo* Arena::CreateMaybeMessage< ::PB_ApaStateInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_ApaStateInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
