// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_3d/mv_uss.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_2fmv_5fuss_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_2fmv_5fuss_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_2fmv_5fuss_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hmi_5f3d_2fmv_5fuss_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5f3d_2fmv_5fuss_2eproto;
class PB_UssSectorInfo;
class PB_UssSectorInfoDefaultTypeInternal;
extern PB_UssSectorInfoDefaultTypeInternal _PB_UssSectorInfo_default_instance_;
class PB_UssSectorOutputData;
class PB_UssSectorOutputDataDefaultTypeInternal;
extern PB_UssSectorOutputDataDefaultTypeInternal _PB_UssSectorOutputData_default_instance_;
class PB_UssSector_FrameHeader;
class PB_UssSector_FrameHeaderDefaultTypeInternal;
extern PB_UssSector_FrameHeaderDefaultTypeInternal _PB_UssSector_FrameHeader_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PB_UssSectorInfo* Arena::CreateMaybeMessage<::PB_UssSectorInfo>(Arena*);
template<> ::PB_UssSectorOutputData* Arena::CreateMaybeMessage<::PB_UssSectorOutputData>(Arena*);
template<> ::PB_UssSector_FrameHeader* Arena::CreateMaybeMessage<::PB_UssSector_FrameHeader>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class PB_UssSector_FrameHeader PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PB_UssSector_FrameHeader) */ {
 public:
  inline PB_UssSector_FrameHeader() : PB_UssSector_FrameHeader(nullptr) {};
  virtual ~PB_UssSector_FrameHeader();

  PB_UssSector_FrameHeader(const PB_UssSector_FrameHeader& from);
  PB_UssSector_FrameHeader(PB_UssSector_FrameHeader&& from) noexcept
    : PB_UssSector_FrameHeader() {
    *this = ::std::move(from);
  }

  inline PB_UssSector_FrameHeader& operator=(const PB_UssSector_FrameHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_UssSector_FrameHeader& operator=(PB_UssSector_FrameHeader&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PB_UssSector_FrameHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_UssSector_FrameHeader* internal_default_instance() {
    return reinterpret_cast<const PB_UssSector_FrameHeader*>(
               &_PB_UssSector_FrameHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PB_UssSector_FrameHeader& a, PB_UssSector_FrameHeader& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_UssSector_FrameHeader* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_UssSector_FrameHeader* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PB_UssSector_FrameHeader* New() const final {
    return CreateMaybeMessage<PB_UssSector_FrameHeader>(nullptr);
  }

  PB_UssSector_FrameHeader* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PB_UssSector_FrameHeader>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PB_UssSector_FrameHeader& from);
  void MergeFrom(const PB_UssSector_FrameHeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_UssSector_FrameHeader* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PB_UssSector_FrameHeader";
  }
  protected:
  explicit PB_UssSector_FrameHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5f3d_2fmv_5fuss_2eproto);
    return ::descriptor_table_hmi_5f3d_2fmv_5fuss_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNFrameIdFieldNumber = 1,
    kNRerveredFieldNumber = 2,
    kITimeMsecFieldNumber = 3,
  };
  // uint32 nFrameId = 1;
  void clear_nframeid();
  ::PROTOBUF_NAMESPACE_ID::uint32 nframeid() const;
  void set_nframeid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nframeid() const;
  void _internal_set_nframeid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 nRervered = 2;
  void clear_nrervered();
  ::PROTOBUF_NAMESPACE_ID::uint32 nrervered() const;
  void set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nrervered() const;
  void _internal_set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 ITimeMsec = 3;
  void clear_itimemsec();
  ::PROTOBUF_NAMESPACE_ID::uint64 itimemsec() const;
  void set_itimemsec(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_itimemsec() const;
  void _internal_set_itimemsec(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:PB_UssSector_FrameHeader)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nframeid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nrervered_;
  ::PROTOBUF_NAMESPACE_ID::uint64 itimemsec_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5f3d_2fmv_5fuss_2eproto;
};
// -------------------------------------------------------------------

class PB_UssSectorInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PB_UssSectorInfo) */ {
 public:
  inline PB_UssSectorInfo() : PB_UssSectorInfo(nullptr) {};
  virtual ~PB_UssSectorInfo();

  PB_UssSectorInfo(const PB_UssSectorInfo& from);
  PB_UssSectorInfo(PB_UssSectorInfo&& from) noexcept
    : PB_UssSectorInfo() {
    *this = ::std::move(from);
  }

  inline PB_UssSectorInfo& operator=(const PB_UssSectorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_UssSectorInfo& operator=(PB_UssSectorInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PB_UssSectorInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_UssSectorInfo* internal_default_instance() {
    return reinterpret_cast<const PB_UssSectorInfo*>(
               &_PB_UssSectorInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PB_UssSectorInfo& a, PB_UssSectorInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_UssSectorInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_UssSectorInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PB_UssSectorInfo* New() const final {
    return CreateMaybeMessage<PB_UssSectorInfo>(nullptr);
  }

  PB_UssSectorInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PB_UssSectorInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PB_UssSectorInfo& from);
  void MergeFrom(const PB_UssSectorInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_UssSectorInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PB_UssSectorInfo";
  }
  protected:
  explicit PB_UssSectorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5f3d_2fmv_5fuss_2eproto);
    return ::descriptor_table_hmi_5f3d_2fmv_5fuss_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPDCDistanceFieldNumber = 1,
    kLAEBDistanceFieldNumber = 2,
    kSensorStatusFieldNumber = 3,
    kSystemStatusFieldNumber = 4,
    kNRerveredFieldNumber = 5,
  };
  // repeated uint32 PDC_Distance = 1;
  int pdc_distance_size() const;
  private:
  int _internal_pdc_distance_size() const;
  public:
  void clear_pdc_distance();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pdc_distance(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_pdc_distance() const;
  void _internal_add_pdc_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_pdc_distance();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 pdc_distance(int index) const;
  void set_pdc_distance(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_pdc_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      pdc_distance() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_pdc_distance();

  // repeated uint32 LAEB_Distance = 2;
  int laeb_distance_size() const;
  private:
  int _internal_laeb_distance_size() const;
  public:
  void clear_laeb_distance();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_laeb_distance(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_laeb_distance() const;
  void _internal_add_laeb_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_laeb_distance();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 laeb_distance(int index) const;
  void set_laeb_distance(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_laeb_distance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      laeb_distance() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_laeb_distance();

  // repeated uint32 SensorStatus = 3;
  int sensorstatus_size() const;
  private:
  int _internal_sensorstatus_size() const;
  public:
  void clear_sensorstatus();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sensorstatus(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_sensorstatus() const;
  void _internal_add_sensorstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_sensorstatus();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 sensorstatus(int index) const;
  void set_sensorstatus(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_sensorstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      sensorstatus() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_sensorstatus();

  // uint32 SystemStatus = 4;
  void clear_systemstatus();
  ::PROTOBUF_NAMESPACE_ID::uint32 systemstatus() const;
  void set_systemstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_systemstatus() const;
  void _internal_set_systemstatus(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 nRervered = 5;
  void clear_nrervered();
  ::PROTOBUF_NAMESPACE_ID::uint32 nrervered() const;
  void set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nrervered() const;
  void _internal_set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:PB_UssSectorInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > pdc_distance_;
  mutable std::atomic<int> _pdc_distance_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > laeb_distance_;
  mutable std::atomic<int> _laeb_distance_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > sensorstatus_;
  mutable std::atomic<int> _sensorstatus_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 systemstatus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nrervered_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5f3d_2fmv_5fuss_2eproto;
};
// -------------------------------------------------------------------

class PB_UssSectorOutputData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PB_UssSectorOutputData) */ {
 public:
  inline PB_UssSectorOutputData() : PB_UssSectorOutputData(nullptr) {};
  virtual ~PB_UssSectorOutputData();

  PB_UssSectorOutputData(const PB_UssSectorOutputData& from);
  PB_UssSectorOutputData(PB_UssSectorOutputData&& from) noexcept
    : PB_UssSectorOutputData() {
    *this = ::std::move(from);
  }

  inline PB_UssSectorOutputData& operator=(const PB_UssSectorOutputData& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_UssSectorOutputData& operator=(PB_UssSectorOutputData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PB_UssSectorOutputData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_UssSectorOutputData* internal_default_instance() {
    return reinterpret_cast<const PB_UssSectorOutputData*>(
               &_PB_UssSectorOutputData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PB_UssSectorOutputData& a, PB_UssSectorOutputData& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_UssSectorOutputData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_UssSectorOutputData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PB_UssSectorOutputData* New() const final {
    return CreateMaybeMessage<PB_UssSectorOutputData>(nullptr);
  }

  PB_UssSectorOutputData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PB_UssSectorOutputData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PB_UssSectorOutputData& from);
  void MergeFrom(const PB_UssSectorOutputData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_UssSectorOutputData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PB_UssSectorOutputData";
  }
  protected:
  explicit PB_UssSectorOutputData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5f3d_2fmv_5fuss_2eproto);
    return ::descriptor_table_hmi_5f3d_2fmv_5fuss_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameHeadFieldNumber = 1,
    kSectorDataFieldNumber = 2,
  };
  // .PB_UssSector_FrameHeader FrameHead = 1;
  bool has_framehead() const;
  private:
  bool _internal_has_framehead() const;
  public:
  void clear_framehead();
  const ::PB_UssSector_FrameHeader& framehead() const;
  ::PB_UssSector_FrameHeader* release_framehead();
  ::PB_UssSector_FrameHeader* mutable_framehead();
  void set_allocated_framehead(::PB_UssSector_FrameHeader* framehead);
  private:
  const ::PB_UssSector_FrameHeader& _internal_framehead() const;
  ::PB_UssSector_FrameHeader* _internal_mutable_framehead();
  public:
  void unsafe_arena_set_allocated_framehead(
      ::PB_UssSector_FrameHeader* framehead);
  ::PB_UssSector_FrameHeader* unsafe_arena_release_framehead();

  // .PB_UssSectorInfo SectorData = 2;
  bool has_sectordata() const;
  private:
  bool _internal_has_sectordata() const;
  public:
  void clear_sectordata();
  const ::PB_UssSectorInfo& sectordata() const;
  ::PB_UssSectorInfo* release_sectordata();
  ::PB_UssSectorInfo* mutable_sectordata();
  void set_allocated_sectordata(::PB_UssSectorInfo* sectordata);
  private:
  const ::PB_UssSectorInfo& _internal_sectordata() const;
  ::PB_UssSectorInfo* _internal_mutable_sectordata();
  public:
  void unsafe_arena_set_allocated_sectordata(
      ::PB_UssSectorInfo* sectordata);
  ::PB_UssSectorInfo* unsafe_arena_release_sectordata();

  // @@protoc_insertion_point(class_scope:PB_UssSectorOutputData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PB_UssSector_FrameHeader* framehead_;
  ::PB_UssSectorInfo* sectordata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5f3d_2fmv_5fuss_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_UssSector_FrameHeader

// uint32 nFrameId = 1;
inline void PB_UssSector_FrameHeader::clear_nframeid() {
  nframeid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSector_FrameHeader::_internal_nframeid() const {
  return nframeid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSector_FrameHeader::nframeid() const {
  // @@protoc_insertion_point(field_get:PB_UssSector_FrameHeader.nFrameId)
  return _internal_nframeid();
}
inline void PB_UssSector_FrameHeader::_internal_set_nframeid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nframeid_ = value;
}
inline void PB_UssSector_FrameHeader::set_nframeid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nframeid(value);
  // @@protoc_insertion_point(field_set:PB_UssSector_FrameHeader.nFrameId)
}

// uint32 nRervered = 2;
inline void PB_UssSector_FrameHeader::clear_nrervered() {
  nrervered_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSector_FrameHeader::_internal_nrervered() const {
  return nrervered_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSector_FrameHeader::nrervered() const {
  // @@protoc_insertion_point(field_get:PB_UssSector_FrameHeader.nRervered)
  return _internal_nrervered();
}
inline void PB_UssSector_FrameHeader::_internal_set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nrervered_ = value;
}
inline void PB_UssSector_FrameHeader::set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nrervered(value);
  // @@protoc_insertion_point(field_set:PB_UssSector_FrameHeader.nRervered)
}

// uint64 ITimeMsec = 3;
inline void PB_UssSector_FrameHeader::clear_itimemsec() {
  itimemsec_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PB_UssSector_FrameHeader::_internal_itimemsec() const {
  return itimemsec_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PB_UssSector_FrameHeader::itimemsec() const {
  // @@protoc_insertion_point(field_get:PB_UssSector_FrameHeader.ITimeMsec)
  return _internal_itimemsec();
}
inline void PB_UssSector_FrameHeader::_internal_set_itimemsec(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  itimemsec_ = value;
}
inline void PB_UssSector_FrameHeader::set_itimemsec(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_itimemsec(value);
  // @@protoc_insertion_point(field_set:PB_UssSector_FrameHeader.ITimeMsec)
}

// -------------------------------------------------------------------

// PB_UssSectorInfo

// repeated uint32 PDC_Distance = 1;
inline int PB_UssSectorInfo::_internal_pdc_distance_size() const {
  return pdc_distance_.size();
}
inline int PB_UssSectorInfo::pdc_distance_size() const {
  return _internal_pdc_distance_size();
}
inline void PB_UssSectorInfo::clear_pdc_distance() {
  pdc_distance_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::_internal_pdc_distance(int index) const {
  return pdc_distance_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::pdc_distance(int index) const {
  // @@protoc_insertion_point(field_get:PB_UssSectorInfo.PDC_Distance)
  return _internal_pdc_distance(index);
}
inline void PB_UssSectorInfo::set_pdc_distance(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  pdc_distance_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_UssSectorInfo.PDC_Distance)
}
inline void PB_UssSectorInfo::_internal_add_pdc_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  pdc_distance_.Add(value);
}
inline void PB_UssSectorInfo::add_pdc_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_pdc_distance(value);
  // @@protoc_insertion_point(field_add:PB_UssSectorInfo.PDC_Distance)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
PB_UssSectorInfo::_internal_pdc_distance() const {
  return pdc_distance_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
PB_UssSectorInfo::pdc_distance() const {
  // @@protoc_insertion_point(field_list:PB_UssSectorInfo.PDC_Distance)
  return _internal_pdc_distance();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
PB_UssSectorInfo::_internal_mutable_pdc_distance() {
  return &pdc_distance_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
PB_UssSectorInfo::mutable_pdc_distance() {
  // @@protoc_insertion_point(field_mutable_list:PB_UssSectorInfo.PDC_Distance)
  return _internal_mutable_pdc_distance();
}

// repeated uint32 LAEB_Distance = 2;
inline int PB_UssSectorInfo::_internal_laeb_distance_size() const {
  return laeb_distance_.size();
}
inline int PB_UssSectorInfo::laeb_distance_size() const {
  return _internal_laeb_distance_size();
}
inline void PB_UssSectorInfo::clear_laeb_distance() {
  laeb_distance_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::_internal_laeb_distance(int index) const {
  return laeb_distance_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::laeb_distance(int index) const {
  // @@protoc_insertion_point(field_get:PB_UssSectorInfo.LAEB_Distance)
  return _internal_laeb_distance(index);
}
inline void PB_UssSectorInfo::set_laeb_distance(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  laeb_distance_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_UssSectorInfo.LAEB_Distance)
}
inline void PB_UssSectorInfo::_internal_add_laeb_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  laeb_distance_.Add(value);
}
inline void PB_UssSectorInfo::add_laeb_distance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_laeb_distance(value);
  // @@protoc_insertion_point(field_add:PB_UssSectorInfo.LAEB_Distance)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
PB_UssSectorInfo::_internal_laeb_distance() const {
  return laeb_distance_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
PB_UssSectorInfo::laeb_distance() const {
  // @@protoc_insertion_point(field_list:PB_UssSectorInfo.LAEB_Distance)
  return _internal_laeb_distance();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
PB_UssSectorInfo::_internal_mutable_laeb_distance() {
  return &laeb_distance_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
PB_UssSectorInfo::mutable_laeb_distance() {
  // @@protoc_insertion_point(field_mutable_list:PB_UssSectorInfo.LAEB_Distance)
  return _internal_mutable_laeb_distance();
}

// repeated uint32 SensorStatus = 3;
inline int PB_UssSectorInfo::_internal_sensorstatus_size() const {
  return sensorstatus_.size();
}
inline int PB_UssSectorInfo::sensorstatus_size() const {
  return _internal_sensorstatus_size();
}
inline void PB_UssSectorInfo::clear_sensorstatus() {
  sensorstatus_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::_internal_sensorstatus(int index) const {
  return sensorstatus_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::sensorstatus(int index) const {
  // @@protoc_insertion_point(field_get:PB_UssSectorInfo.SensorStatus)
  return _internal_sensorstatus(index);
}
inline void PB_UssSectorInfo::set_sensorstatus(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  sensorstatus_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_UssSectorInfo.SensorStatus)
}
inline void PB_UssSectorInfo::_internal_add_sensorstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  sensorstatus_.Add(value);
}
inline void PB_UssSectorInfo::add_sensorstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_sensorstatus(value);
  // @@protoc_insertion_point(field_add:PB_UssSectorInfo.SensorStatus)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
PB_UssSectorInfo::_internal_sensorstatus() const {
  return sensorstatus_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
PB_UssSectorInfo::sensorstatus() const {
  // @@protoc_insertion_point(field_list:PB_UssSectorInfo.SensorStatus)
  return _internal_sensorstatus();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
PB_UssSectorInfo::_internal_mutable_sensorstatus() {
  return &sensorstatus_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
PB_UssSectorInfo::mutable_sensorstatus() {
  // @@protoc_insertion_point(field_mutable_list:PB_UssSectorInfo.SensorStatus)
  return _internal_mutable_sensorstatus();
}

// uint32 SystemStatus = 4;
inline void PB_UssSectorInfo::clear_systemstatus() {
  systemstatus_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::_internal_systemstatus() const {
  return systemstatus_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::systemstatus() const {
  // @@protoc_insertion_point(field_get:PB_UssSectorInfo.SystemStatus)
  return _internal_systemstatus();
}
inline void PB_UssSectorInfo::_internal_set_systemstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  systemstatus_ = value;
}
inline void PB_UssSectorInfo::set_systemstatus(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_systemstatus(value);
  // @@protoc_insertion_point(field_set:PB_UssSectorInfo.SystemStatus)
}

// uint32 nRervered = 5;
inline void PB_UssSectorInfo::clear_nrervered() {
  nrervered_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::_internal_nrervered() const {
  return nrervered_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PB_UssSectorInfo::nrervered() const {
  // @@protoc_insertion_point(field_get:PB_UssSectorInfo.nRervered)
  return _internal_nrervered();
}
inline void PB_UssSectorInfo::_internal_set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nrervered_ = value;
}
inline void PB_UssSectorInfo::set_nrervered(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nrervered(value);
  // @@protoc_insertion_point(field_set:PB_UssSectorInfo.nRervered)
}

// -------------------------------------------------------------------

// PB_UssSectorOutputData

// .PB_UssSector_FrameHeader FrameHead = 1;
inline bool PB_UssSectorOutputData::_internal_has_framehead() const {
  return this != internal_default_instance() && framehead_ != nullptr;
}
inline bool PB_UssSectorOutputData::has_framehead() const {
  return _internal_has_framehead();
}
inline void PB_UssSectorOutputData::clear_framehead() {
  if (GetArena() == nullptr && framehead_ != nullptr) {
    delete framehead_;
  }
  framehead_ = nullptr;
}
inline const ::PB_UssSector_FrameHeader& PB_UssSectorOutputData::_internal_framehead() const {
  const ::PB_UssSector_FrameHeader* p = framehead_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PB_UssSector_FrameHeader*>(
      &::_PB_UssSector_FrameHeader_default_instance_);
}
inline const ::PB_UssSector_FrameHeader& PB_UssSectorOutputData::framehead() const {
  // @@protoc_insertion_point(field_get:PB_UssSectorOutputData.FrameHead)
  return _internal_framehead();
}
inline void PB_UssSectorOutputData::unsafe_arena_set_allocated_framehead(
    ::PB_UssSector_FrameHeader* framehead) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(framehead_);
  }
  framehead_ = framehead;
  if (framehead) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PB_UssSectorOutputData.FrameHead)
}
inline ::PB_UssSector_FrameHeader* PB_UssSectorOutputData::release_framehead() {
  auto temp = unsafe_arena_release_framehead();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PB_UssSector_FrameHeader* PB_UssSectorOutputData::unsafe_arena_release_framehead() {
  // @@protoc_insertion_point(field_release:PB_UssSectorOutputData.FrameHead)
  
  ::PB_UssSector_FrameHeader* temp = framehead_;
  framehead_ = nullptr;
  return temp;
}
inline ::PB_UssSector_FrameHeader* PB_UssSectorOutputData::_internal_mutable_framehead() {
  
  if (framehead_ == nullptr) {
    auto* p = CreateMaybeMessage<::PB_UssSector_FrameHeader>(GetArena());
    framehead_ = p;
  }
  return framehead_;
}
inline ::PB_UssSector_FrameHeader* PB_UssSectorOutputData::mutable_framehead() {
  // @@protoc_insertion_point(field_mutable:PB_UssSectorOutputData.FrameHead)
  return _internal_mutable_framehead();
}
inline void PB_UssSectorOutputData::set_allocated_framehead(::PB_UssSector_FrameHeader* framehead) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete framehead_;
  }
  if (framehead) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(framehead);
    if (message_arena != submessage_arena) {
      framehead = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, framehead, submessage_arena);
    }
    
  } else {
    
  }
  framehead_ = framehead;
  // @@protoc_insertion_point(field_set_allocated:PB_UssSectorOutputData.FrameHead)
}

// .PB_UssSectorInfo SectorData = 2;
inline bool PB_UssSectorOutputData::_internal_has_sectordata() const {
  return this != internal_default_instance() && sectordata_ != nullptr;
}
inline bool PB_UssSectorOutputData::has_sectordata() const {
  return _internal_has_sectordata();
}
inline void PB_UssSectorOutputData::clear_sectordata() {
  if (GetArena() == nullptr && sectordata_ != nullptr) {
    delete sectordata_;
  }
  sectordata_ = nullptr;
}
inline const ::PB_UssSectorInfo& PB_UssSectorOutputData::_internal_sectordata() const {
  const ::PB_UssSectorInfo* p = sectordata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PB_UssSectorInfo*>(
      &::_PB_UssSectorInfo_default_instance_);
}
inline const ::PB_UssSectorInfo& PB_UssSectorOutputData::sectordata() const {
  // @@protoc_insertion_point(field_get:PB_UssSectorOutputData.SectorData)
  return _internal_sectordata();
}
inline void PB_UssSectorOutputData::unsafe_arena_set_allocated_sectordata(
    ::PB_UssSectorInfo* sectordata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sectordata_);
  }
  sectordata_ = sectordata;
  if (sectordata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PB_UssSectorOutputData.SectorData)
}
inline ::PB_UssSectorInfo* PB_UssSectorOutputData::release_sectordata() {
  auto temp = unsafe_arena_release_sectordata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PB_UssSectorInfo* PB_UssSectorOutputData::unsafe_arena_release_sectordata() {
  // @@protoc_insertion_point(field_release:PB_UssSectorOutputData.SectorData)
  
  ::PB_UssSectorInfo* temp = sectordata_;
  sectordata_ = nullptr;
  return temp;
}
inline ::PB_UssSectorInfo* PB_UssSectorOutputData::_internal_mutable_sectordata() {
  
  if (sectordata_ == nullptr) {
    auto* p = CreateMaybeMessage<::PB_UssSectorInfo>(GetArena());
    sectordata_ = p;
  }
  return sectordata_;
}
inline ::PB_UssSectorInfo* PB_UssSectorOutputData::mutable_sectordata() {
  // @@protoc_insertion_point(field_mutable:PB_UssSectorOutputData.SectorData)
  return _internal_mutable_sectordata();
}
inline void PB_UssSectorOutputData::set_allocated_sectordata(::PB_UssSectorInfo* sectordata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete sectordata_;
  }
  if (sectordata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sectordata);
    if (message_arena != submessage_arena) {
      sectordata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sectordata, submessage_arena);
    }
    
  } else {
    
  }
  sectordata_ = sectordata;
  // @@protoc_insertion_point(field_set_allocated:PB_UssSectorOutputData.SectorData)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_2fmv_5fuss_2eproto
