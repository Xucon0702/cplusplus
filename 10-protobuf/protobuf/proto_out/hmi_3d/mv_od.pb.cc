// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_3d/mv_od.proto

#include "hmi_3d/mv_od.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_2fmv_5fod_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_AVAP_DynBarrier_hmi_5f3d_2fmv_5fod_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_2fmv_5fod_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_AVAP_Speedbump_hmi_5f3d_2fmv_5fod_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_2fmv_5fod_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_AVAP_StcBarrier_hmi_5f3d_2fmv_5fod_2eproto;
class PB_AVAP_StcBarrierDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_AVAP_StcBarrier> _instance;
} _PB_AVAP_StcBarrier_default_instance_;
class PB_AVAP_DynBarrierDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_AVAP_DynBarrier> _instance;
} _PB_AVAP_DynBarrier_default_instance_;
class PB_AVAP_SpeedbumpDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_AVAP_Speedbump> _instance;
} _PB_AVAP_Speedbump_default_instance_;
class PB_OdInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PB_OdInfo> _instance;
} _PB_OdInfo_default_instance_;
static void InitDefaultsscc_info_PB_AVAP_DynBarrier_hmi_5f3d_2fmv_5fod_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_AVAP_DynBarrier_default_instance_;
    new (ptr) ::PB_AVAP_DynBarrier();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_AVAP_DynBarrier::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_AVAP_DynBarrier_hmi_5f3d_2fmv_5fod_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PB_AVAP_DynBarrier_hmi_5f3d_2fmv_5fod_2eproto}, {}};

static void InitDefaultsscc_info_PB_AVAP_Speedbump_hmi_5f3d_2fmv_5fod_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_AVAP_Speedbump_default_instance_;
    new (ptr) ::PB_AVAP_Speedbump();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_AVAP_Speedbump::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_AVAP_Speedbump_hmi_5f3d_2fmv_5fod_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PB_AVAP_Speedbump_hmi_5f3d_2fmv_5fod_2eproto}, {}};

static void InitDefaultsscc_info_PB_AVAP_StcBarrier_hmi_5f3d_2fmv_5fod_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_AVAP_StcBarrier_default_instance_;
    new (ptr) ::PB_AVAP_StcBarrier();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_AVAP_StcBarrier::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PB_AVAP_StcBarrier_hmi_5f3d_2fmv_5fod_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PB_AVAP_StcBarrier_hmi_5f3d_2fmv_5fod_2eproto}, {}};

static void InitDefaultsscc_info_PB_OdInfo_hmi_5f3d_2fmv_5fod_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PB_OdInfo_default_instance_;
    new (ptr) ::PB_OdInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PB_OdInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_PB_OdInfo_hmi_5f3d_2fmv_5fod_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_PB_OdInfo_hmi_5f3d_2fmv_5fod_2eproto}, {
      &scc_info_PB_AVAP_StcBarrier_hmi_5f3d_2fmv_5fod_2eproto.base,
      &scc_info_PB_AVAP_DynBarrier_hmi_5f3d_2fmv_5fod_2eproto.base,
      &scc_info_PB_AVAP_Speedbump_hmi_5f3d_2fmv_5fod_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_hmi_5f3d_2fmv_5fod_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_hmi_5f3d_2fmv_5fod_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_hmi_5f3d_2fmv_5fod_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_hmi_5f3d_2fmv_5fod_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_StcBarrier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_StcBarrier, avap_stcbarriertype_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_StcBarrier, avap_stcbarrier_x_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_StcBarrier, avap_stcbarrier_y_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_StcBarrier, avap_stcbarrierdrct_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_DynBarrier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_DynBarrier, avap_dynbarriertype_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_DynBarrier, avap_dynbarrier_x_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_DynBarrier, avap_dynbarrier_y_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_DynBarrier, avap_dynbarrierdrct_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_Speedbump, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_Speedbump, avap_speedbump_a_x_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_Speedbump, avap_speedbump_a_y_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_Speedbump, avap_speedbump_b_x_),
  PROTOBUF_FIELD_OFFSET(::PB_AVAP_Speedbump, avap_speedbump_b_y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PB_OdInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PB_OdInfo, timemsec_),
  PROTOBUF_FIELD_OFFSET(::PB_OdInfo, astcbarrier_),
  PROTOBUF_FIELD_OFFSET(::PB_OdInfo, adynbarrier_),
  PROTOBUF_FIELD_OFFSET(::PB_OdInfo, aspeedbump_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PB_AVAP_StcBarrier)},
  { 9, -1, sizeof(::PB_AVAP_DynBarrier)},
  { 18, -1, sizeof(::PB_AVAP_Speedbump)},
  { 27, -1, sizeof(::PB_OdInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_AVAP_StcBarrier_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_AVAP_DynBarrier_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_AVAP_Speedbump_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PB_OdInfo_default_instance_),
};

const char descriptor_table_protodef_hmi_5f3d_2fmv_5fod_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022hmi_3d/mv_od.proto\"\204\001\n\022PB_AVAP_StcBarr"
  "ier\022\033\n\023AVAP_StcBarrierType\030\001 \001(\r\022\031\n\021AVAP"
  "_StcBarrier_X\030\002 \001(\002\022\031\n\021AVAP_StcBarrier_Y"
  "\030\003 \001(\002\022\033\n\023AVAP_StcBarrierDrct\030\004 \001(\r\"\204\001\n\022"
  "PB_AVAP_DynBarrier\022\033\n\023AVAP_DynBarrierTyp"
  "e\030\001 \001(\r\022\031\n\021AVAP_DynBarrier_X\030\002 \001(\002\022\031\n\021AV"
  "AP_DynBarrier_Y\030\003 \001(\002\022\033\n\023AVAP_DynBarrier"
  "Drct\030\004 \001(\r\"\203\001\n\021PB_AVAP_Speedbump\022\032\n\022AVAP"
  "_Speedbump_A_X\030\001 \001(\002\022\032\n\022AVAP_Speedbump_A"
  "_Y\030\002 \001(\002\022\032\n\022AVAP_Speedbump_B_X\030\003 \001(\002\022\032\n\022"
  "AVAP_Speedbump_B_Y\030\004 \001(\002\"\231\001\n\tPB_OdInfo\022\020"
  "\n\010TimeMsec\030\001 \001(\004\022(\n\013aStcBarrier\030\002 \003(\0132\023."
  "PB_AVAP_StcBarrier\022(\n\013aDynBarrier\030\003 \003(\0132"
  "\023.PB_AVAP_DynBarrier\022&\n\naSpeedbump\030\004 \003(\013"
  "2\022.PB_AVAP_Speedbumpb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_hmi_5f3d_2fmv_5fod_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_hmi_5f3d_2fmv_5fod_2eproto_sccs[4] = {
  &scc_info_PB_AVAP_DynBarrier_hmi_5f3d_2fmv_5fod_2eproto.base,
  &scc_info_PB_AVAP_Speedbump_hmi_5f3d_2fmv_5fod_2eproto.base,
  &scc_info_PB_AVAP_StcBarrier_hmi_5f3d_2fmv_5fod_2eproto.base,
  &scc_info_PB_OdInfo_hmi_5f3d_2fmv_5fod_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_hmi_5f3d_2fmv_5fod_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5f3d_2fmv_5fod_2eproto = {
  false, false, descriptor_table_protodef_hmi_5f3d_2fmv_5fod_2eproto, "hmi_3d/mv_od.proto", 588,
  &descriptor_table_hmi_5f3d_2fmv_5fod_2eproto_once, descriptor_table_hmi_5f3d_2fmv_5fod_2eproto_sccs, descriptor_table_hmi_5f3d_2fmv_5fod_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_hmi_5f3d_2fmv_5fod_2eproto::offsets,
  file_level_metadata_hmi_5f3d_2fmv_5fod_2eproto, 4, file_level_enum_descriptors_hmi_5f3d_2fmv_5fod_2eproto, file_level_service_descriptors_hmi_5f3d_2fmv_5fod_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_hmi_5f3d_2fmv_5fod_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_hmi_5f3d_2fmv_5fod_2eproto)), true);

// ===================================================================

void PB_AVAP_StcBarrier::InitAsDefaultInstance() {
}
class PB_AVAP_StcBarrier::_Internal {
 public:
};

PB_AVAP_StcBarrier::PB_AVAP_StcBarrier(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_AVAP_StcBarrier)
}
PB_AVAP_StcBarrier::PB_AVAP_StcBarrier(const PB_AVAP_StcBarrier& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&avap_stcbarriertype_, &from.avap_stcbarriertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&avap_stcbarrierdrct_) -
    reinterpret_cast<char*>(&avap_stcbarriertype_)) + sizeof(avap_stcbarrierdrct_));
  // @@protoc_insertion_point(copy_constructor:PB_AVAP_StcBarrier)
}

void PB_AVAP_StcBarrier::SharedCtor() {
  ::memset(&avap_stcbarriertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avap_stcbarrierdrct_) -
      reinterpret_cast<char*>(&avap_stcbarriertype_)) + sizeof(avap_stcbarrierdrct_));
}

PB_AVAP_StcBarrier::~PB_AVAP_StcBarrier() {
  // @@protoc_insertion_point(destructor:PB_AVAP_StcBarrier)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_AVAP_StcBarrier::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_AVAP_StcBarrier::ArenaDtor(void* object) {
  PB_AVAP_StcBarrier* _this = reinterpret_cast< PB_AVAP_StcBarrier* >(object);
  (void)_this;
}
void PB_AVAP_StcBarrier::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AVAP_StcBarrier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_AVAP_StcBarrier& PB_AVAP_StcBarrier::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_AVAP_StcBarrier_hmi_5f3d_2fmv_5fod_2eproto.base);
  return *internal_default_instance();
}


void PB_AVAP_StcBarrier::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_AVAP_StcBarrier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avap_stcbarriertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avap_stcbarrierdrct_) -
      reinterpret_cast<char*>(&avap_stcbarriertype_)) + sizeof(avap_stcbarrierdrct_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AVAP_StcBarrier::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 AVAP_StcBarrierType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          avap_stcbarriertype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float AVAP_StcBarrier_X = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          avap_stcbarrier_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float AVAP_StcBarrier_Y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          avap_stcbarrier_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 AVAP_StcBarrierDrct = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          avap_stcbarrierdrct_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_AVAP_StcBarrier::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_AVAP_StcBarrier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AVAP_StcBarrierType = 1;
  if (this->avap_stcbarriertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_avap_stcbarriertype(), target);
  }

  // float AVAP_StcBarrier_X = 2;
  if (!(this->avap_stcbarrier_x() <= 0 && this->avap_stcbarrier_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_avap_stcbarrier_x(), target);
  }

  // float AVAP_StcBarrier_Y = 3;
  if (!(this->avap_stcbarrier_y() <= 0 && this->avap_stcbarrier_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_avap_stcbarrier_y(), target);
  }

  // uint32 AVAP_StcBarrierDrct = 4;
  if (this->avap_stcbarrierdrct() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_avap_stcbarrierdrct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_AVAP_StcBarrier)
  return target;
}

size_t PB_AVAP_StcBarrier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_AVAP_StcBarrier)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AVAP_StcBarrierType = 1;
  if (this->avap_stcbarriertype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avap_stcbarriertype());
  }

  // float AVAP_StcBarrier_X = 2;
  if (!(this->avap_stcbarrier_x() <= 0 && this->avap_stcbarrier_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float AVAP_StcBarrier_Y = 3;
  if (!(this->avap_stcbarrier_y() <= 0 && this->avap_stcbarrier_y() >= 0)) {
    total_size += 1 + 4;
  }

  // uint32 AVAP_StcBarrierDrct = 4;
  if (this->avap_stcbarrierdrct() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avap_stcbarrierdrct());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_AVAP_StcBarrier::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_AVAP_StcBarrier)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_AVAP_StcBarrier* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_AVAP_StcBarrier>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_AVAP_StcBarrier)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_AVAP_StcBarrier)
    MergeFrom(*source);
  }
}

void PB_AVAP_StcBarrier::MergeFrom(const PB_AVAP_StcBarrier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_AVAP_StcBarrier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avap_stcbarriertype() != 0) {
    _internal_set_avap_stcbarriertype(from._internal_avap_stcbarriertype());
  }
  if (!(from.avap_stcbarrier_x() <= 0 && from.avap_stcbarrier_x() >= 0)) {
    _internal_set_avap_stcbarrier_x(from._internal_avap_stcbarrier_x());
  }
  if (!(from.avap_stcbarrier_y() <= 0 && from.avap_stcbarrier_y() >= 0)) {
    _internal_set_avap_stcbarrier_y(from._internal_avap_stcbarrier_y());
  }
  if (from.avap_stcbarrierdrct() != 0) {
    _internal_set_avap_stcbarrierdrct(from._internal_avap_stcbarrierdrct());
  }
}

void PB_AVAP_StcBarrier::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_AVAP_StcBarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_AVAP_StcBarrier::CopyFrom(const PB_AVAP_StcBarrier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_AVAP_StcBarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AVAP_StcBarrier::IsInitialized() const {
  return true;
}

void PB_AVAP_StcBarrier::InternalSwap(PB_AVAP_StcBarrier* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_AVAP_StcBarrier, avap_stcbarrierdrct_)
      + sizeof(PB_AVAP_StcBarrier::avap_stcbarrierdrct_)
      - PROTOBUF_FIELD_OFFSET(PB_AVAP_StcBarrier, avap_stcbarriertype_)>(
          reinterpret_cast<char*>(&avap_stcbarriertype_),
          reinterpret_cast<char*>(&other->avap_stcbarriertype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AVAP_StcBarrier::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PB_AVAP_DynBarrier::InitAsDefaultInstance() {
}
class PB_AVAP_DynBarrier::_Internal {
 public:
};

PB_AVAP_DynBarrier::PB_AVAP_DynBarrier(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_AVAP_DynBarrier)
}
PB_AVAP_DynBarrier::PB_AVAP_DynBarrier(const PB_AVAP_DynBarrier& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&avap_dynbarriertype_, &from.avap_dynbarriertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&avap_dynbarrierdrct_) -
    reinterpret_cast<char*>(&avap_dynbarriertype_)) + sizeof(avap_dynbarrierdrct_));
  // @@protoc_insertion_point(copy_constructor:PB_AVAP_DynBarrier)
}

void PB_AVAP_DynBarrier::SharedCtor() {
  ::memset(&avap_dynbarriertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avap_dynbarrierdrct_) -
      reinterpret_cast<char*>(&avap_dynbarriertype_)) + sizeof(avap_dynbarrierdrct_));
}

PB_AVAP_DynBarrier::~PB_AVAP_DynBarrier() {
  // @@protoc_insertion_point(destructor:PB_AVAP_DynBarrier)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_AVAP_DynBarrier::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_AVAP_DynBarrier::ArenaDtor(void* object) {
  PB_AVAP_DynBarrier* _this = reinterpret_cast< PB_AVAP_DynBarrier* >(object);
  (void)_this;
}
void PB_AVAP_DynBarrier::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AVAP_DynBarrier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_AVAP_DynBarrier& PB_AVAP_DynBarrier::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_AVAP_DynBarrier_hmi_5f3d_2fmv_5fod_2eproto.base);
  return *internal_default_instance();
}


void PB_AVAP_DynBarrier::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_AVAP_DynBarrier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avap_dynbarriertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avap_dynbarrierdrct_) -
      reinterpret_cast<char*>(&avap_dynbarriertype_)) + sizeof(avap_dynbarrierdrct_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AVAP_DynBarrier::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 AVAP_DynBarrierType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          avap_dynbarriertype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float AVAP_DynBarrier_X = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          avap_dynbarrier_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float AVAP_DynBarrier_Y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          avap_dynbarrier_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 AVAP_DynBarrierDrct = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          avap_dynbarrierdrct_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_AVAP_DynBarrier::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_AVAP_DynBarrier)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AVAP_DynBarrierType = 1;
  if (this->avap_dynbarriertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_avap_dynbarriertype(), target);
  }

  // float AVAP_DynBarrier_X = 2;
  if (!(this->avap_dynbarrier_x() <= 0 && this->avap_dynbarrier_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_avap_dynbarrier_x(), target);
  }

  // float AVAP_DynBarrier_Y = 3;
  if (!(this->avap_dynbarrier_y() <= 0 && this->avap_dynbarrier_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_avap_dynbarrier_y(), target);
  }

  // uint32 AVAP_DynBarrierDrct = 4;
  if (this->avap_dynbarrierdrct() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_avap_dynbarrierdrct(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_AVAP_DynBarrier)
  return target;
}

size_t PB_AVAP_DynBarrier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_AVAP_DynBarrier)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AVAP_DynBarrierType = 1;
  if (this->avap_dynbarriertype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avap_dynbarriertype());
  }

  // float AVAP_DynBarrier_X = 2;
  if (!(this->avap_dynbarrier_x() <= 0 && this->avap_dynbarrier_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float AVAP_DynBarrier_Y = 3;
  if (!(this->avap_dynbarrier_y() <= 0 && this->avap_dynbarrier_y() >= 0)) {
    total_size += 1 + 4;
  }

  // uint32 AVAP_DynBarrierDrct = 4;
  if (this->avap_dynbarrierdrct() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_avap_dynbarrierdrct());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_AVAP_DynBarrier::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_AVAP_DynBarrier)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_AVAP_DynBarrier* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_AVAP_DynBarrier>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_AVAP_DynBarrier)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_AVAP_DynBarrier)
    MergeFrom(*source);
  }
}

void PB_AVAP_DynBarrier::MergeFrom(const PB_AVAP_DynBarrier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_AVAP_DynBarrier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avap_dynbarriertype() != 0) {
    _internal_set_avap_dynbarriertype(from._internal_avap_dynbarriertype());
  }
  if (!(from.avap_dynbarrier_x() <= 0 && from.avap_dynbarrier_x() >= 0)) {
    _internal_set_avap_dynbarrier_x(from._internal_avap_dynbarrier_x());
  }
  if (!(from.avap_dynbarrier_y() <= 0 && from.avap_dynbarrier_y() >= 0)) {
    _internal_set_avap_dynbarrier_y(from._internal_avap_dynbarrier_y());
  }
  if (from.avap_dynbarrierdrct() != 0) {
    _internal_set_avap_dynbarrierdrct(from._internal_avap_dynbarrierdrct());
  }
}

void PB_AVAP_DynBarrier::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_AVAP_DynBarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_AVAP_DynBarrier::CopyFrom(const PB_AVAP_DynBarrier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_AVAP_DynBarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AVAP_DynBarrier::IsInitialized() const {
  return true;
}

void PB_AVAP_DynBarrier::InternalSwap(PB_AVAP_DynBarrier* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_AVAP_DynBarrier, avap_dynbarrierdrct_)
      + sizeof(PB_AVAP_DynBarrier::avap_dynbarrierdrct_)
      - PROTOBUF_FIELD_OFFSET(PB_AVAP_DynBarrier, avap_dynbarriertype_)>(
          reinterpret_cast<char*>(&avap_dynbarriertype_),
          reinterpret_cast<char*>(&other->avap_dynbarriertype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AVAP_DynBarrier::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PB_AVAP_Speedbump::InitAsDefaultInstance() {
}
class PB_AVAP_Speedbump::_Internal {
 public:
};

PB_AVAP_Speedbump::PB_AVAP_Speedbump(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_AVAP_Speedbump)
}
PB_AVAP_Speedbump::PB_AVAP_Speedbump(const PB_AVAP_Speedbump& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&avap_speedbump_a_x_, &from.avap_speedbump_a_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&avap_speedbump_b_y_) -
    reinterpret_cast<char*>(&avap_speedbump_a_x_)) + sizeof(avap_speedbump_b_y_));
  // @@protoc_insertion_point(copy_constructor:PB_AVAP_Speedbump)
}

void PB_AVAP_Speedbump::SharedCtor() {
  ::memset(&avap_speedbump_a_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avap_speedbump_b_y_) -
      reinterpret_cast<char*>(&avap_speedbump_a_x_)) + sizeof(avap_speedbump_b_y_));
}

PB_AVAP_Speedbump::~PB_AVAP_Speedbump() {
  // @@protoc_insertion_point(destructor:PB_AVAP_Speedbump)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_AVAP_Speedbump::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_AVAP_Speedbump::ArenaDtor(void* object) {
  PB_AVAP_Speedbump* _this = reinterpret_cast< PB_AVAP_Speedbump* >(object);
  (void)_this;
}
void PB_AVAP_Speedbump::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AVAP_Speedbump::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_AVAP_Speedbump& PB_AVAP_Speedbump::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_AVAP_Speedbump_hmi_5f3d_2fmv_5fod_2eproto.base);
  return *internal_default_instance();
}


void PB_AVAP_Speedbump::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_AVAP_Speedbump)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avap_speedbump_a_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avap_speedbump_b_y_) -
      reinterpret_cast<char*>(&avap_speedbump_a_x_)) + sizeof(avap_speedbump_b_y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AVAP_Speedbump::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float AVAP_Speedbump_A_X = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          avap_speedbump_a_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float AVAP_Speedbump_A_Y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          avap_speedbump_a_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float AVAP_Speedbump_B_X = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          avap_speedbump_b_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float AVAP_Speedbump_B_Y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          avap_speedbump_b_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_AVAP_Speedbump::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_AVAP_Speedbump)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float AVAP_Speedbump_A_X = 1;
  if (!(this->avap_speedbump_a_x() <= 0 && this->avap_speedbump_a_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_avap_speedbump_a_x(), target);
  }

  // float AVAP_Speedbump_A_Y = 2;
  if (!(this->avap_speedbump_a_y() <= 0 && this->avap_speedbump_a_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_avap_speedbump_a_y(), target);
  }

  // float AVAP_Speedbump_B_X = 3;
  if (!(this->avap_speedbump_b_x() <= 0 && this->avap_speedbump_b_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_avap_speedbump_b_x(), target);
  }

  // float AVAP_Speedbump_B_Y = 4;
  if (!(this->avap_speedbump_b_y() <= 0 && this->avap_speedbump_b_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_avap_speedbump_b_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_AVAP_Speedbump)
  return target;
}

size_t PB_AVAP_Speedbump::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_AVAP_Speedbump)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float AVAP_Speedbump_A_X = 1;
  if (!(this->avap_speedbump_a_x() <= 0 && this->avap_speedbump_a_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float AVAP_Speedbump_A_Y = 2;
  if (!(this->avap_speedbump_a_y() <= 0 && this->avap_speedbump_a_y() >= 0)) {
    total_size += 1 + 4;
  }

  // float AVAP_Speedbump_B_X = 3;
  if (!(this->avap_speedbump_b_x() <= 0 && this->avap_speedbump_b_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float AVAP_Speedbump_B_Y = 4;
  if (!(this->avap_speedbump_b_y() <= 0 && this->avap_speedbump_b_y() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_AVAP_Speedbump::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_AVAP_Speedbump)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_AVAP_Speedbump* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_AVAP_Speedbump>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_AVAP_Speedbump)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_AVAP_Speedbump)
    MergeFrom(*source);
  }
}

void PB_AVAP_Speedbump::MergeFrom(const PB_AVAP_Speedbump& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_AVAP_Speedbump)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.avap_speedbump_a_x() <= 0 && from.avap_speedbump_a_x() >= 0)) {
    _internal_set_avap_speedbump_a_x(from._internal_avap_speedbump_a_x());
  }
  if (!(from.avap_speedbump_a_y() <= 0 && from.avap_speedbump_a_y() >= 0)) {
    _internal_set_avap_speedbump_a_y(from._internal_avap_speedbump_a_y());
  }
  if (!(from.avap_speedbump_b_x() <= 0 && from.avap_speedbump_b_x() >= 0)) {
    _internal_set_avap_speedbump_b_x(from._internal_avap_speedbump_b_x());
  }
  if (!(from.avap_speedbump_b_y() <= 0 && from.avap_speedbump_b_y() >= 0)) {
    _internal_set_avap_speedbump_b_y(from._internal_avap_speedbump_b_y());
  }
}

void PB_AVAP_Speedbump::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_AVAP_Speedbump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_AVAP_Speedbump::CopyFrom(const PB_AVAP_Speedbump& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_AVAP_Speedbump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AVAP_Speedbump::IsInitialized() const {
  return true;
}

void PB_AVAP_Speedbump::InternalSwap(PB_AVAP_Speedbump* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_AVAP_Speedbump, avap_speedbump_b_y_)
      + sizeof(PB_AVAP_Speedbump::avap_speedbump_b_y_)
      - PROTOBUF_FIELD_OFFSET(PB_AVAP_Speedbump, avap_speedbump_a_x_)>(
          reinterpret_cast<char*>(&avap_speedbump_a_x_),
          reinterpret_cast<char*>(&other->avap_speedbump_a_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AVAP_Speedbump::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PB_OdInfo::InitAsDefaultInstance() {
}
class PB_OdInfo::_Internal {
 public:
};

PB_OdInfo::PB_OdInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  astcbarrier_(arena),
  adynbarrier_(arena),
  aspeedbump_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PB_OdInfo)
}
PB_OdInfo::PB_OdInfo(const PB_OdInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      astcbarrier_(from.astcbarrier_),
      adynbarrier_(from.adynbarrier_),
      aspeedbump_(from.aspeedbump_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  timemsec_ = from.timemsec_;
  // @@protoc_insertion_point(copy_constructor:PB_OdInfo)
}

void PB_OdInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PB_OdInfo_hmi_5f3d_2fmv_5fod_2eproto.base);
  timemsec_ = PROTOBUF_ULONGLONG(0);
}

PB_OdInfo::~PB_OdInfo() {
  // @@protoc_insertion_point(destructor:PB_OdInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PB_OdInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PB_OdInfo::ArenaDtor(void* object) {
  PB_OdInfo* _this = reinterpret_cast< PB_OdInfo* >(object);
  (void)_this;
}
void PB_OdInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_OdInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PB_OdInfo& PB_OdInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PB_OdInfo_hmi_5f3d_2fmv_5fod_2eproto.base);
  return *internal_default_instance();
}


void PB_OdInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PB_OdInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  astcbarrier_.Clear();
  adynbarrier_.Clear();
  aspeedbump_.Clear();
  timemsec_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_OdInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 TimeMsec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          timemsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .PB_AVAP_StcBarrier aStcBarrier = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_astcbarrier(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .PB_AVAP_DynBarrier aDynBarrier = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_adynbarrier(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .PB_AVAP_Speedbump aSpeedbump = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_aspeedbump(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PB_OdInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_OdInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 TimeMsec = 1;
  if (this->timemsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_timemsec(), target);
  }

  // repeated .PB_AVAP_StcBarrier aStcBarrier = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_astcbarrier_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_astcbarrier(i), target, stream);
  }

  // repeated .PB_AVAP_DynBarrier aDynBarrier = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_adynbarrier_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_adynbarrier(i), target, stream);
  }

  // repeated .PB_AVAP_Speedbump aSpeedbump = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_aspeedbump_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_aspeedbump(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_OdInfo)
  return target;
}

size_t PB_OdInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PB_OdInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PB_AVAP_StcBarrier aStcBarrier = 2;
  total_size += 1UL * this->_internal_astcbarrier_size();
  for (const auto& msg : this->astcbarrier_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .PB_AVAP_DynBarrier aDynBarrier = 3;
  total_size += 1UL * this->_internal_adynbarrier_size();
  for (const auto& msg : this->adynbarrier_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .PB_AVAP_Speedbump aSpeedbump = 4;
  total_size += 1UL * this->_internal_aspeedbump_size();
  for (const auto& msg : this->aspeedbump_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 TimeMsec = 1;
  if (this->timemsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timemsec());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PB_OdInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PB_OdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PB_OdInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PB_OdInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PB_OdInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PB_OdInfo)
    MergeFrom(*source);
  }
}

void PB_OdInfo::MergeFrom(const PB_OdInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PB_OdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  astcbarrier_.MergeFrom(from.astcbarrier_);
  adynbarrier_.MergeFrom(from.adynbarrier_);
  aspeedbump_.MergeFrom(from.aspeedbump_);
  if (from.timemsec() != 0) {
    _internal_set_timemsec(from._internal_timemsec());
  }
}

void PB_OdInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PB_OdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_OdInfo::CopyFrom(const PB_OdInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PB_OdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_OdInfo::IsInitialized() const {
  return true;
}

void PB_OdInfo::InternalSwap(PB_OdInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  astcbarrier_.InternalSwap(&other->astcbarrier_);
  adynbarrier_.InternalSwap(&other->adynbarrier_);
  aspeedbump_.InternalSwap(&other->aspeedbump_);
  swap(timemsec_, other->timemsec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_OdInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PB_AVAP_StcBarrier* Arena::CreateMaybeMessage< ::PB_AVAP_StcBarrier >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_AVAP_StcBarrier >(arena);
}
template<> PROTOBUF_NOINLINE ::PB_AVAP_DynBarrier* Arena::CreateMaybeMessage< ::PB_AVAP_DynBarrier >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_AVAP_DynBarrier >(arena);
}
template<> PROTOBUF_NOINLINE ::PB_AVAP_Speedbump* Arena::CreateMaybeMessage< ::PB_AVAP_Speedbump >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_AVAP_Speedbump >(arena);
}
template<> PROTOBUF_NOINLINE ::PB_OdInfo* Arena::CreateMaybeMessage< ::PB_OdInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PB_OdInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
