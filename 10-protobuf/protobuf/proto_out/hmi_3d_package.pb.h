// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_3d_package.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_5fpackage_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_5fpackage_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "hmi_3d/mv_uss.pb.h"
#include "animal/animal.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hmi_5f3d_5fpackage_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hmi_5f3d_5fpackage_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5f3d_5fpackage_2eproto;
class PB_Hmi3dPackage;
class PB_Hmi3dPackageDefaultTypeInternal;
extern PB_Hmi3dPackageDefaultTypeInternal _PB_Hmi3dPackage_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PB_Hmi3dPackage* Arena::CreateMaybeMessage<::PB_Hmi3dPackage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class PB_Hmi3dPackage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PB_Hmi3dPackage) */ {
 public:
  inline PB_Hmi3dPackage() : PB_Hmi3dPackage(nullptr) {};
  virtual ~PB_Hmi3dPackage();

  PB_Hmi3dPackage(const PB_Hmi3dPackage& from);
  PB_Hmi3dPackage(PB_Hmi3dPackage&& from) noexcept
    : PB_Hmi3dPackage() {
    *this = ::std::move(from);
  }

  inline PB_Hmi3dPackage& operator=(const PB_Hmi3dPackage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Hmi3dPackage& operator=(PB_Hmi3dPackage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PB_Hmi3dPackage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PB_Hmi3dPackage* internal_default_instance() {
    return reinterpret_cast<const PB_Hmi3dPackage*>(
               &_PB_Hmi3dPackage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PB_Hmi3dPackage& a, PB_Hmi3dPackage& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Hmi3dPackage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Hmi3dPackage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PB_Hmi3dPackage* New() const final {
    return CreateMaybeMessage<PB_Hmi3dPackage>(nullptr);
  }

  PB_Hmi3dPackage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PB_Hmi3dPackage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PB_Hmi3dPackage& from);
  void MergeFrom(const PB_Hmi3dPackage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Hmi3dPackage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PB_Hmi3dPackage";
  }
  protected:
  explicit PB_Hmi3dPackage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_hmi_5f3d_5fpackage_2eproto);
    return ::descriptor_table_hmi_5f3d_5fpackage_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUssSectorDataFieldNumber = 1,
    kAnimalDataFieldNumber = 2,
  };
  // .PB_UssSectorOutputData UssSectorData = 1;
  bool has_usssectordata() const;
  private:
  bool _internal_has_usssectordata() const;
  public:
  void clear_usssectordata();
  const ::PB_UssSectorOutputData& usssectordata() const;
  ::PB_UssSectorOutputData* release_usssectordata();
  ::PB_UssSectorOutputData* mutable_usssectordata();
  void set_allocated_usssectordata(::PB_UssSectorOutputData* usssectordata);
  private:
  const ::PB_UssSectorOutputData& _internal_usssectordata() const;
  ::PB_UssSectorOutputData* _internal_mutable_usssectordata();
  public:
  void unsafe_arena_set_allocated_usssectordata(
      ::PB_UssSectorOutputData* usssectordata);
  ::PB_UssSectorOutputData* unsafe_arena_release_usssectordata();

  // .Animal AnimalData = 2;
  bool has_animaldata() const;
  private:
  bool _internal_has_animaldata() const;
  public:
  void clear_animaldata();
  const ::Animal& animaldata() const;
  ::Animal* release_animaldata();
  ::Animal* mutable_animaldata();
  void set_allocated_animaldata(::Animal* animaldata);
  private:
  const ::Animal& _internal_animaldata() const;
  ::Animal* _internal_mutable_animaldata();
  public:
  void unsafe_arena_set_allocated_animaldata(
      ::Animal* animaldata);
  ::Animal* unsafe_arena_release_animaldata();

  // @@protoc_insertion_point(class_scope:PB_Hmi3dPackage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PB_UssSectorOutputData* usssectordata_;
  ::Animal* animaldata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5f3d_5fpackage_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_Hmi3dPackage

// .PB_UssSectorOutputData UssSectorData = 1;
inline bool PB_Hmi3dPackage::_internal_has_usssectordata() const {
  return this != internal_default_instance() && usssectordata_ != nullptr;
}
inline bool PB_Hmi3dPackage::has_usssectordata() const {
  return _internal_has_usssectordata();
}
inline const ::PB_UssSectorOutputData& PB_Hmi3dPackage::_internal_usssectordata() const {
  const ::PB_UssSectorOutputData* p = usssectordata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PB_UssSectorOutputData*>(
      &::_PB_UssSectorOutputData_default_instance_);
}
inline const ::PB_UssSectorOutputData& PB_Hmi3dPackage::usssectordata() const {
  // @@protoc_insertion_point(field_get:PB_Hmi3dPackage.UssSectorData)
  return _internal_usssectordata();
}
inline void PB_Hmi3dPackage::unsafe_arena_set_allocated_usssectordata(
    ::PB_UssSectorOutputData* usssectordata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(usssectordata_);
  }
  usssectordata_ = usssectordata;
  if (usssectordata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PB_Hmi3dPackage.UssSectorData)
}
inline ::PB_UssSectorOutputData* PB_Hmi3dPackage::release_usssectordata() {
  auto temp = unsafe_arena_release_usssectordata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PB_UssSectorOutputData* PB_Hmi3dPackage::unsafe_arena_release_usssectordata() {
  // @@protoc_insertion_point(field_release:PB_Hmi3dPackage.UssSectorData)
  
  ::PB_UssSectorOutputData* temp = usssectordata_;
  usssectordata_ = nullptr;
  return temp;
}
inline ::PB_UssSectorOutputData* PB_Hmi3dPackage::_internal_mutable_usssectordata() {
  
  if (usssectordata_ == nullptr) {
    auto* p = CreateMaybeMessage<::PB_UssSectorOutputData>(GetArena());
    usssectordata_ = p;
  }
  return usssectordata_;
}
inline ::PB_UssSectorOutputData* PB_Hmi3dPackage::mutable_usssectordata() {
  // @@protoc_insertion_point(field_mutable:PB_Hmi3dPackage.UssSectorData)
  return _internal_mutable_usssectordata();
}
inline void PB_Hmi3dPackage::set_allocated_usssectordata(::PB_UssSectorOutputData* usssectordata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(usssectordata_);
  }
  if (usssectordata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(usssectordata)->GetArena();
    if (message_arena != submessage_arena) {
      usssectordata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, usssectordata, submessage_arena);
    }
    
  } else {
    
  }
  usssectordata_ = usssectordata;
  // @@protoc_insertion_point(field_set_allocated:PB_Hmi3dPackage.UssSectorData)
}

// .Animal AnimalData = 2;
inline bool PB_Hmi3dPackage::_internal_has_animaldata() const {
  return this != internal_default_instance() && animaldata_ != nullptr;
}
inline bool PB_Hmi3dPackage::has_animaldata() const {
  return _internal_has_animaldata();
}
inline const ::Animal& PB_Hmi3dPackage::_internal_animaldata() const {
  const ::Animal* p = animaldata_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Animal*>(
      &::_Animal_default_instance_);
}
inline const ::Animal& PB_Hmi3dPackage::animaldata() const {
  // @@protoc_insertion_point(field_get:PB_Hmi3dPackage.AnimalData)
  return _internal_animaldata();
}
inline void PB_Hmi3dPackage::unsafe_arena_set_allocated_animaldata(
    ::Animal* animaldata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(animaldata_);
  }
  animaldata_ = animaldata;
  if (animaldata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PB_Hmi3dPackage.AnimalData)
}
inline ::Animal* PB_Hmi3dPackage::release_animaldata() {
  auto temp = unsafe_arena_release_animaldata();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Animal* PB_Hmi3dPackage::unsafe_arena_release_animaldata() {
  // @@protoc_insertion_point(field_release:PB_Hmi3dPackage.AnimalData)
  
  ::Animal* temp = animaldata_;
  animaldata_ = nullptr;
  return temp;
}
inline ::Animal* PB_Hmi3dPackage::_internal_mutable_animaldata() {
  
  if (animaldata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Animal>(GetArena());
    animaldata_ = p;
  }
  return animaldata_;
}
inline ::Animal* PB_Hmi3dPackage::mutable_animaldata() {
  // @@protoc_insertion_point(field_mutable:PB_Hmi3dPackage.AnimalData)
  return _internal_mutable_animaldata();
}
inline void PB_Hmi3dPackage::set_allocated_animaldata(::Animal* animaldata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(animaldata_);
  }
  if (animaldata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(animaldata)->GetArena();
    if (message_arena != submessage_arena) {
      animaldata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, animaldata, submessage_arena);
    }
    
  } else {
    
  }
  animaldata_ = animaldata;
  // @@protoc_insertion_point(field_set_allocated:PB_Hmi3dPackage.AnimalData)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hmi_5f3d_5fpackage_2eproto
